// Copyright Â© 2015, Peter Atashian
// Licensed under the MIT License <LICENSE.md>
#![cfg(windows)]
extern crate advapi32;
use advapi32::*;
#[inline(never)] fn bb<T>(_: T) {}
#[test]
fn functions() {
    bb(AdjustTokenPrivileges);
    bb(CloseServiceHandle);
    bb(ControlService);
    bb(CreateServiceA);
    bb(CreateServiceW);
    bb(CredDeleteA);
    bb(CredDeleteW);
    bb(CredFree);
    bb(CredReadA);
    bb(CredReadW);
    bb(CredWriteA);
    bb(CredWriteW);
    bb(CryptAcquireContextA);
    bb(CryptAcquireContextW);
    bb(CryptCreateHash);
    bb(CryptDestroyHash);
    bb(CryptGetHashParam);
    bb(CryptHashData);
    bb(CryptReleaseContext);
    bb(DeleteService);
    bb(OpenProcessToken);
    bb(OpenSCManagerA);
    bb(OpenSCManagerW);
    bb(OpenServiceA);
    bb(OpenServiceW);
    bb(QueryServiceStatus);
    bb(QueryServiceStatusEx);
    bb(RegCloseKey);
    bb(RegConnectRegistryA);
    bb(RegConnectRegistryW);
    bb(RegCopyTreeA);
    bb(RegCopyTreeW);
    bb(RegCreateKeyExA);
    bb(RegCreateKeyExW);
    bb(RegCreateKeyTransactedA);
    bb(RegCreateKeyTransactedW);
    bb(RegDeleteKeyA);
    bb(RegDeleteKeyExA);
    bb(RegDeleteKeyExW);
    bb(RegDeleteKeyTransactedA);
    bb(RegDeleteKeyTransactedW);
    bb(RegDeleteKeyValueA);
    bb(RegDeleteKeyValueW);
    bb(RegDeleteKeyW);
    bb(RegDeleteTreeA);
    bb(RegDeleteTreeW);
    bb(RegDeleteValueA);
    bb(RegDeleteValueW);
    bb(RegDisablePredefinedCache);
    bb(RegDisablePredefinedCacheEx);
    bb(RegDisableReflectionKey);
    bb(RegEnableReflectionKey);
    bb(RegEnumKeyExA);
    bb(RegEnumKeyExW);
    bb(RegEnumValueA);
    bb(RegEnumValueW);
    bb(RegFlushKey);
    bb(RegGetValueA);
    bb(RegGetValueW);
    bb(RegLoadMUIStringW);
    bb(RegNotifyChangeKeyValue);
    bb(RegOpenCurrentUser);
    bb(RegOpenKeyExA);
    bb(RegOpenKeyExW);
    bb(RegOpenKeyTransactedA);
    bb(RegOpenKeyTransactedW);
    bb(RegOpenUserClassesRoot);
    bb(RegOverridePredefKey);
    bb(RegQueryInfoKeyA);
    bb(RegQueryInfoKeyW);
    bb(RegQueryMultipleValuesA);
    bb(RegQueryMultipleValuesW);
    bb(RegQueryReflectionKey);
    bb(RegQueryValueExA);
    bb(RegQueryValueExW);
    bb(RegSetKeyValueA);
    bb(RegSetValueExA);
    bb(RegSetValueExW);
    bb(RegSetKeyValueW);
    bb(RegisterServiceCtrlHandlerA);
    bb(RegisterServiceCtrlHandlerExA);
    bb(RegisterServiceCtrlHandlerExW);
    bb(RegisterServiceCtrlHandlerW);
    bb(SetServiceStatus);
    bb(StartServiceCtrlDispatcherA);
    bb(StartServiceCtrlDispatcherW);
    bb(GetSecurityInfo);
    bb(ConvertSecurityDescriptorToStringSecurityDescriptorA);
    bb(ConvertSecurityDescriptorToStringSecurityDescriptorW);
    bb(GetFileSecurityW);
    bb(GetFileSecurityA);
    bb(GetNamedSecurityInfoA);
    bb(GetNamedSecurityInfoW);
    bb(GetSecurityInfo);
}
