// Copyright Â© 2015-2017 winapi-rs developers
// Licensed under the Apache License, Version 2.0
// <LICENSE-APACHE or http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your option.
// All files in the project carrying such notice may not be copied, modified, or distributed
// except according to those terms.
//! QoS definitions for NDIS components.
use shared::minwindef::ULONG;
pub type SERVICETYPE = ULONG;
pub const SERVICETYPE_NOTRAFFIC: SERVICETYPE = 0x00000000;
pub const SERVICETYPE_BESTEFFORT: SERVICETYPE = 0x00000001;
pub const SERVICETYPE_CONTROLLEDLOAD: SERVICETYPE = 0x00000002;
pub const SERVICETYPE_GUARANTEED: SERVICETYPE = 0x00000003;
pub const SERVICETYPE_NETWORK_UNAVAILABLE: SERVICETYPE = 0x00000004;
pub const SERVICETYPE_GENERAL_INFORMATION: SERVICETYPE = 0x00000005;
pub const SERVICETYPE_NOCHANGE: SERVICETYPE = 0x00000006;
pub const SERVICETYPE_NONCONFORMING: SERVICETYPE = 0x00000009;
pub const SERVICETYPE_NETWORK_CONTROL: SERVICETYPE = 0x0000000A;
pub const SERVICETYPE_QUALITATIVE: SERVICETYPE = 0x0000000D;
pub const SERVICE_BESTEFFORT: SERVICETYPE = 0x80010000;
pub const SERVICE_CONTROLLEDLOAD: SERVICETYPE = 0x80020000;
pub const SERVICE_GUARANTEED: SERVICETYPE = 0x80040000;
pub const SERVICE_QUALITATIVE: SERVICETYPE = 0x80200000;
pub const SERVICE_NO_TRAFFIC_CONTROL: SERVICETYPE = 0x81000000;
pub const SERVICE_NO_QOS_SIGNALING: SERVICETYPE = 0x40000000;
STRUCT!{struct FLOWSPEC {
    TokenRate: ULONG,
    TokenBucketSize: ULONG,
    PeakBandwidth: ULONG,
    Latency: ULONG,
    DelayVariation: ULONG,
    ServiceType: SERVICETYPE,
    MaxSduSize: ULONG,
    MinimumPolicedSize: ULONG,
}}
pub type PFLOWSPEC = *mut FLOWSPEC;
pub type LPFLOWSPEC = *mut FLOWSPEC;
pub const QOS_NOT_SPECIFIED: ULONG = 0xFFFFFFFF;
pub const POSITIVE_INFINITY_RATE: ULONG = 0xFFFFFFFE;
STRUCT!{struct QOS_OBJECT_HDR {
    ObjectType: ULONG,
    ObjectLength: ULONG,
}}
pub type LPQOS_OBJECT_HDR = *mut QOS_OBJECT_HDR;
pub const QOS_GENERAL_ID_BASE: ULONG = 2000;
pub const QOS_OBJECT_END_OF_LIST: ULONG = 0x00000001 + QOS_GENERAL_ID_BASE;
pub const QOS_OBJECT_SD_MODE: ULONG = 0x00000002 + QOS_GENERAL_ID_BASE;
pub const QOS_OBJECT_SHAPING_RATE: ULONG = 0x00000003 + QOS_GENERAL_ID_BASE;
pub const QOS_OBJECT_DESTADDR: ULONG = 0x00000004 + QOS_GENERAL_ID_BASE;
STRUCT!{struct QOS_SD_MODE {
    ObjectHdr: QOS_OBJECT_HDR,
    ShapeDiscardMode: ULONG,
}}
pub type LPQOS_SD_MODE = *mut QOS_SD_MODE;
pub const TC_NONCONF_BORROW: ULONG = 0;
pub const TC_NONCONF_SHAPE: ULONG = 1;
pub const TC_NONCONF_DISCARD: ULONG = 2;
pub const TC_NONCONF_BORROW_PLUS: ULONG = 3;
STRUCT!{struct QOS_SHAPING_RATE {
    ObjectHdr: QOS_OBJECT_HDR,
    ShapingRate: ULONG,
}}
pub type LPQOS_SHAPING_RATE = *mut QOS_SHAPING_RATE;
