// Copyright Â© 2015-2017 winapi-rs developers
// Licensed under the Apache License, Version 2.0
// <LICENSE-APACHE or http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your option.
// All files in the project carrying such notice may not be copied, modified, or distributed
// except according to those terms.
use ctypes::{c_char, c_short, c_ulong};
use shared::guiddef::GUID;
use shared::minwindef::{BYTE, DWORD, ULONG, USHORT, WORD};
use um::mmeapi::{MIXERCONTROL_CONTROLTYPE_BOOLEAN, WAVEFORMATEX};
use um::wingdi::BITMAPINFOHEADER;
pub const MM_MICROSOFT: WORD = 1;
pub const MM_CREATIVE: WORD = 2;
pub const MM_MEDIAVISION: WORD = 3;
pub const MM_FUJITSU: WORD = 4;
pub const MM_PRAGMATRAX: WORD = 5;
pub const MM_CYRIX: WORD = 6;
pub const MM_PHILIPS_SPEECH_PROCESSING: WORD = 7;
pub const MM_NETXL: WORD = 8;
pub const MM_ZYXEL: WORD = 9;
pub const MM_BECUBED: WORD = 10;
pub const MM_AARDVARK: WORD = 11;
pub const MM_BINTEC: WORD = 12;
pub const MM_HEWLETT_PACKARD: WORD = 13;
pub const MM_ACULAB: WORD = 14;
pub const MM_FAITH: WORD = 15;
pub const MM_MITEL: WORD = 16;
pub const MM_QUANTUM3D: WORD = 17;
pub const MM_SNI: WORD = 18;
pub const MM_EMU: WORD = 19;
pub const MM_ARTISOFT: WORD = 20;
pub const MM_TURTLE_BEACH: WORD = 21;
pub const MM_IBM: WORD = 22;
pub const MM_VOCALTEC: WORD = 23;
pub const MM_ROLAND: WORD = 24;
pub const MM_DSP_SOLUTIONS: WORD = 25;
pub const MM_NEC: WORD = 26;
pub const MM_ATI: WORD = 27;
pub const MM_WANGLABS: WORD = 28;
pub const MM_TANDY: WORD = 29;
pub const MM_VOYETRA: WORD = 30;
pub const MM_ANTEX: WORD = 31;
pub const MM_ICL_PS: WORD = 32;
pub const MM_INTEL: WORD = 33;
pub const MM_GRAVIS: WORD = 34;
pub const MM_VAL: WORD = 35;
pub const MM_INTERACTIVE: WORD = 36;
pub const MM_YAMAHA: WORD = 37;
pub const MM_EVEREX: WORD = 38;
pub const MM_ECHO: WORD = 39;
pub const MM_SIERRA: WORD = 40;
pub const MM_CAT: WORD = 41;
pub const MM_APPS: WORD = 42;
pub const MM_DSP_GROUP: WORD = 43;
pub const MM_MELABS: WORD = 44;
pub const MM_COMPUTER_FRIENDS: WORD = 45;
pub const MM_ESS: WORD = 46;
pub const MM_AUDIOFILE: WORD = 47;
pub const MM_MOTOROLA: WORD = 48;
pub const MM_CANOPUS: WORD = 49;
pub const MM_EPSON: WORD = 50;
pub const MM_TRUEVISION: WORD = 51;
pub const MM_AZTECH: WORD = 52;
pub const MM_VIDEOLOGIC: WORD = 53;
pub const MM_SCALACS: WORD = 54;
pub const MM_KORG: WORD = 55;
pub const MM_APT: WORD = 56;
pub const MM_ICS: WORD = 57;
pub const MM_ITERATEDSYS: WORD = 58;
pub const MM_METHEUS: WORD = 59;
pub const MM_LOGITECH: WORD = 60;
pub const MM_WINNOV: WORD = 61;
pub const MM_NCR: WORD = 62;
pub const MM_EXAN: WORD = 63;
pub const MM_AST: WORD = 64;
pub const MM_WILLOWPOND: WORD = 65;
pub const MM_SONICFOUNDRY: WORD = 66;
pub const MM_VITEC: WORD = 67;
pub const MM_MOSCOM: WORD = 68;
pub const MM_SILICONSOFT: WORD = 69;
pub const MM_TERRATEC: WORD = 70;
pub const MM_MEDIASONIC: WORD = 71;
pub const MM_SANYO: WORD = 72;
pub const MM_SUPERMAC: WORD = 73;
pub const MM_AUDIOPT: WORD = 74;
pub const MM_NOGATECH: WORD = 75;
pub const MM_SPEECHCOMP: WORD = 76;
pub const MM_AHEAD: WORD = 77;
pub const MM_DOLBY: WORD = 78;
pub const MM_OKI: WORD = 79;
pub const MM_AURAVISION: WORD = 80;
pub const MM_OLIVETTI: WORD = 81;
pub const MM_IOMAGIC: WORD = 82;
pub const MM_MATSUSHITA: WORD = 83;
pub const MM_CONTROLRES: WORD = 84;
pub const MM_XEBEC: WORD = 85;
pub const MM_NEWMEDIA: WORD = 86;
pub const MM_NMS: WORD = 87;
pub const MM_LYRRUS: WORD = 88;
pub const MM_COMPUSIC: WORD = 89;
pub const MM_OPTI: WORD = 90;
pub const MM_ADLACC: WORD = 91;
pub const MM_COMPAQ: WORD = 92;
pub const MM_DIALOGIC: WORD = 93;
pub const MM_INSOFT: WORD = 94;
pub const MM_MPTUS: WORD = 95;
pub const MM_WEITEK: WORD = 96;
pub const MM_LERNOUT_AND_HAUSPIE: WORD = 97;
pub const MM_QCIAR: WORD = 98;
pub const MM_APPLE: WORD = 99;
pub const MM_DIGITAL: WORD = 100;
pub const MM_MOTU: WORD = 101;
pub const MM_WORKBIT: WORD = 102;
pub const MM_OSITECH: WORD = 103;
pub const MM_MIRO: WORD = 104;
pub const MM_CIRRUSLOGIC: WORD = 105;
pub const MM_ISOLUTION: WORD = 106;
pub const MM_HORIZONS: WORD = 107;
pub const MM_CONCEPTS: WORD = 108;
pub const MM_VTG: WORD = 109;
pub const MM_RADIUS: WORD = 110;
pub const MM_ROCKWELL: WORD = 111;
pub const MM_XYZ: WORD = 112;
pub const MM_OPCODE: WORD = 113;
pub const MM_VOXWARE: WORD = 114;
pub const MM_NORTHERN_TELECOM: WORD = 115;
pub const MM_APICOM: WORD = 116;
pub const MM_GRANDE: WORD = 117;
pub const MM_ADDX: WORD = 118;
pub const MM_WILDCAT: WORD = 119;
pub const MM_RHETOREX: WORD = 120;
pub const MM_BROOKTREE: WORD = 121;
pub const MM_ENSONIQ: WORD = 125;
pub const MM_FAST: WORD = 126;
pub const MM_NVIDIA: WORD = 127;
pub const MM_OKSORI: WORD = 128;
pub const MM_DIACOUSTICS: WORD = 129;
pub const MM_GULBRANSEN: WORD = 130;
pub const MM_KAY_ELEMETRICS: WORD = 131;
pub const MM_CRYSTAL: WORD = 132;
pub const MM_SPLASH_STUDIOS: WORD = 133;
pub const MM_QUARTERDECK: WORD = 134;
pub const MM_TDK: WORD = 135;
pub const MM_DIGITAL_AUDIO_LABS: WORD = 136;
pub const MM_SEERSYS: WORD = 137;
pub const MM_PICTURETEL: WORD = 138;
pub const MM_ATT_MICROELECTRONICS: WORD = 139;
pub const MM_OSPREY: WORD = 140;
pub const MM_MEDIATRIX: WORD = 141;
pub const MM_SOUNDESIGNS: WORD = 142;
pub const MM_ALDIGITAL: WORD = 143;
pub const MM_SPECTRUM_SIGNAL_PROCESSING: WORD = 144;
pub const MM_ECS: WORD = 145;
pub const MM_AMD: WORD = 146;
pub const MM_COREDYNAMICS: WORD = 147;
pub const MM_CANAM: WORD = 148;
pub const MM_SOFTSOUND: WORD = 149;
pub const MM_NORRIS: WORD = 150;
pub const MM_DDD: WORD = 151;
pub const MM_EUPHONICS: WORD = 152;
pub const MM_PRECEPT: WORD = 153;
pub const MM_CRYSTAL_NET: WORD = 154;
pub const MM_CHROMATIC: WORD = 155;
pub const MM_VOICEINFO: WORD = 156;
pub const MM_VIENNASYS: WORD = 157;
pub const MM_CONNECTIX: WORD = 158;
pub const MM_GADGETLABS: WORD = 159;
pub const MM_FRONTIER: WORD = 160;
pub const MM_VIONA: WORD = 161;
pub const MM_CASIO: WORD = 162;
pub const MM_DIAMONDMM: WORD = 163;
pub const MM_S3: WORD = 164;
pub const MM_DVISION: WORD = 165;
pub const MM_NETSCAPE: WORD = 166;
pub const MM_SOUNDSPACE: WORD = 167;
pub const MM_VANKOEVERING: WORD = 168;
pub const MM_QTEAM: WORD = 169;
pub const MM_ZEFIRO: WORD = 170;
pub const MM_STUDER: WORD = 171;
pub const MM_FRAUNHOFER_IIS: WORD = 172;
pub const MM_QUICKNET: WORD = 173;
pub const MM_ALARIS: WORD = 174;
pub const MM_SICRESOURCE: WORD = 175;
pub const MM_NEOMAGIC: WORD = 176;
pub const MM_MERGING_TECHNOLOGIES: WORD = 177;
pub const MM_XIRLINK: WORD = 178;
pub const MM_COLORGRAPH: WORD = 179;
pub const MM_OTI: WORD = 180;
pub const MM_AUREAL: WORD = 181;
pub const MM_VIVO: WORD = 182;
pub const MM_SHARP: WORD = 183;
pub const MM_LUCENT: WORD = 184;
pub const MM_ATT: WORD = 185;
pub const MM_SUNCOM: WORD = 186;
pub const MM_SORVIS: WORD = 187;
pub const MM_INVISION: WORD = 188;
pub const MM_BERKOM: WORD = 189;
pub const MM_MARIAN: WORD = 190;
pub const MM_DPSINC: WORD = 191;
pub const MM_BCB: WORD = 192;
pub const MM_MOTIONPIXELS: WORD = 193;
pub const MM_QDESIGN: WORD = 194;
pub const MM_NMP: WORD = 195;
pub const MM_DATAFUSION: WORD = 196;
pub const MM_DUCK: WORD = 197;
pub const MM_FTR: WORD = 198;
pub const MM_BERCOS: WORD = 199;
pub const MM_ONLIVE: WORD = 200;
pub const MM_SIEMENS_SBC: WORD = 201;
pub const MM_TERALOGIC: WORD = 202;
pub const MM_PHONET: WORD = 203;
pub const MM_WINBOND: WORD = 204;
pub const MM_VIRTUALMUSIC: WORD = 205;
pub const MM_ENET: WORD = 206;
pub const MM_GUILLEMOT: WORD = 207;
pub const MM_EMAGIC: WORD = 208;
pub const MM_MWM: WORD = 209;
pub const MM_PACIFICRESEARCH: WORD = 210;
pub const MM_SIPROLAB: WORD = 211;
pub const MM_LYNX: WORD = 212;
pub const MM_SPECTRUM_PRODUCTIONS: WORD = 213;
pub const MM_DICTAPHONE: WORD = 214;
pub const MM_QUALCOMM: WORD = 215;
pub const MM_RZS: WORD = 216;
pub const MM_AUDIOSCIENCE: WORD = 217;
pub const MM_PINNACLE: WORD = 218;
pub const MM_EES: WORD = 219;
pub const MM_HAFTMANN: WORD = 220;
pub const MM_LUCID: WORD = 221;
pub const MM_HEADSPACE: WORD = 222;
pub const MM_UNISYS: WORD = 223;
pub const MM_LUMINOSITI: WORD = 224;
pub const MM_ACTIVEVOICE: WORD = 225;
pub const MM_DTS: WORD = 226;
pub const MM_DIGIGRAM: WORD = 227;
pub const MM_SOFTLAB_NSK: WORD = 228;
pub const MM_FORTEMEDIA: WORD = 229;
pub const MM_SONORUS: WORD = 230;
pub const MM_ARRAY: WORD = 231;
pub const MM_DATARAN: WORD = 232;
pub const MM_I_LINK: WORD = 233;
pub const MM_SELSIUS_SYSTEMS: WORD = 234;
pub const MM_ADMOS: WORD = 235;
pub const MM_LEXICON: WORD = 236;
pub const MM_SGI: WORD = 237;
pub const MM_IPI: WORD = 238;
pub const MM_ICE: WORD = 239;
pub const MM_VQST: WORD = 240;
pub const MM_ETEK: WORD = 241;
pub const MM_CS: WORD = 242;
pub const MM_ALESIS: WORD = 243;
pub const MM_INTERNET: WORD = 244;
pub const MM_SONY: WORD = 245;
pub const MM_HYPERACTIVE: WORD = 246;
pub const MM_UHER_INFORMATIC: WORD = 247;
pub const MM_SYDEC_NV: WORD = 248;
pub const MM_FLEXION: WORD = 249;
pub const MM_VIA: WORD = 250;
pub const MM_MICRONAS: WORD = 251;
pub const MM_ANALOGDEVICES: WORD = 252;
pub const MM_HP: WORD = 253;
pub const MM_MATROX_DIV: WORD = 254;
pub const MM_QUICKAUDIO: WORD = 255;
pub const MM_YOUCOM: WORD = 256;
pub const MM_RICHMOND: WORD = 257;
pub const MM_IODD: WORD = 258;
pub const MM_ICCC: WORD = 259;
pub const MM_3COM: WORD = 260;
pub const MM_MALDEN: WORD = 261;
pub const MM_3DFX: WORD = 262;
pub const MM_MINDMAKER: WORD = 263;
pub const MM_TELEKOL: WORD = 264;
pub const MM_ST_MICROELECTRONICS: WORD = 265;
pub const MM_ALGOVISION: WORD = 266;
pub const MM_UNMAPPED: WORD = 0xffff;
pub const MM_PID_UNMAPPED: WORD = MM_UNMAPPED;
#[inline]
pub fn INIT_MMREG_MID(guid: &mut GUID, id: USHORT) {
    guid.Data1 = 0xd5a47fa7 + (id as c_ulong);
    guid.Data2 = 0x6d98;
    guid.Data3 = 0x11d1;
    guid.Data4[0] = 0xa2;
    guid.Data4[1] = 0x1a;
    guid.Data4[2] = 0x00;
    guid.Data4[3] = 0xa0;
    guid.Data4[4] = 0xc9;
    guid.Data4[5] = 0x22;
    guid.Data4[6] = 0x31;
    guid.Data4[7] = 0x96;
}
#[inline]
pub fn EXTRACT_MMREG_MID(guid: &GUID) -> USHORT {
    (guid.Data1 - 0xd5a47fa7) as USHORT
}
#[inline]
pub fn IS_COMPATIBLE_MMREG_MID(guid: &GUID) -> bool {
    (guid.Data1 >= 0xd5a47fa7) && (guid.Data1 < 0xd5a47fa7 + 0xffff) &&
    (guid.Data2 == 0x6d98) && (guid.Data3 == 0x11d1) && (guid.Data4[0] == 0xa2) &&
    (guid.Data4[1] == 0x1a) && (guid.Data4[2] == 0x00) && (guid.Data4[3] == 0xa0) &&
    (guid.Data4[4] == 0xc9) && (guid.Data4[5] == 0x22) && (guid.Data4[6] == 0x31) &&
    (guid.Data4[7] == 0x96)
}
#[inline]
pub fn INIT_MMREG_PID(guid: &mut GUID, id: USHORT) {
    guid.Data1 = 0xe36dc2ac + (id as c_ulong);
    guid.Data2 = 0x6d9a;
    guid.Data3 = 0x11d1;
    guid.Data4[0] = 0xa2;
    guid.Data4[1] = 0x1a;
    guid.Data4[2] = 0x00;
    guid.Data4[3] = 0xa0;
    guid.Data4[4] = 0xc9;
    guid.Data4[5] = 0x22;
    guid.Data4[6] = 0x31;
    guid.Data4[7] = 0x96;
}
#[inline]
pub fn EXTRACT_MMREG_PID(guid: &GUID) -> USHORT {
    (guid.Data1 - 0xe36dc2ac) as USHORT
}
#[inline]
pub fn IS_COMPATIBLE_MMREG_PID(guid: &GUID) -> bool {
    (guid.Data1 >= 0xe36dc2ac) && (guid.Data1 < 0xe36dc2ac + 0xffff) &&
    (guid.Data2 == 0x6d9a) && (guid.Data3 == 0x11d1) && (guid.Data4[0] == 0xa2) &&
    (guid.Data4[1] == 0x1a) && (guid.Data4[2] == 0x00) && (guid.Data4[3] == 0xa0) &&
    (guid.Data4[4] == 0xc9) && (guid.Data4[5] == 0x22) && (guid.Data4[6] == 0x31) &&
    (guid.Data4[7] == 0x96)
}
pub const MM_MIDI_MAPPER: WORD = 1;
pub const MM_WAVE_MAPPER: WORD = 2;
pub const MM_SNDBLST_MIDIOUT: WORD = 3;
pub const MM_SNDBLST_MIDIIN: WORD = 4;
pub const MM_SNDBLST_SYNTH: WORD = 5;
pub const MM_SNDBLST_WAVEOUT: WORD = 6;
pub const MM_SNDBLST_WAVEIN: WORD = 7;
pub const MM_ADLIB: WORD = 9;
pub const MM_MPU401_MIDIOUT: WORD = 10;
pub const MM_MPU401_MIDIIN: WORD = 11;
pub const MM_PC_JOYSTICK: WORD = 12;
pub const MM_PCSPEAKER_WAVEOUT: WORD = 13;
pub const MM_MSFT_WSS_WAVEIN: WORD = 14;
pub const MM_MSFT_WSS_WAVEOUT: WORD = 15;
pub const MM_MSFT_WSS_FMSYNTH_STEREO: WORD = 16;
pub const MM_MSFT_WSS_MIXER: WORD = 17;
pub const MM_MSFT_WSS_OEM_WAVEIN: WORD = 18;
pub const MM_MSFT_WSS_OEM_WAVEOUT: WORD = 19;
pub const MM_MSFT_WSS_OEM_FMSYNTH_STEREO: WORD = 20;
pub const MM_MSFT_WSS_AUX: WORD = 21;
pub const MM_MSFT_WSS_OEM_AUX: WORD = 22;
pub const MM_MSFT_GENERIC_WAVEIN: WORD = 23;
pub const MM_MSFT_GENERIC_WAVEOUT: WORD = 24;
pub const MM_MSFT_GENERIC_MIDIIN: WORD = 25;
pub const MM_MSFT_GENERIC_MIDIOUT: WORD = 26;
pub const MM_MSFT_GENERIC_MIDISYNTH: WORD = 27;
pub const MM_MSFT_GENERIC_AUX_LINE: WORD = 28;
pub const MM_MSFT_GENERIC_AUX_MIC: WORD = 29;
pub const MM_MSFT_GENERIC_AUX_CD: WORD = 30;
pub const MM_MSFT_WSS_OEM_MIXER: WORD = 31;
pub const MM_MSFT_MSACM: WORD = 32;
pub const MM_MSFT_ACM_MSADPCM: WORD = 33;
pub const MM_MSFT_ACM_IMAADPCM: WORD = 34;
pub const MM_MSFT_ACM_MSFILTER: WORD = 35;
pub const MM_MSFT_ACM_GSM610: WORD = 36;
pub const MM_MSFT_ACM_G711: WORD = 37;
pub const MM_MSFT_ACM_PCM: WORD = 38;
pub const MM_WSS_SB16_WAVEIN: WORD = 39;
pub const MM_WSS_SB16_WAVEOUT: WORD = 40;
pub const MM_WSS_SB16_MIDIIN: WORD = 41;
pub const MM_WSS_SB16_MIDIOUT: WORD = 42;
pub const MM_WSS_SB16_SYNTH: WORD = 43;
pub const MM_WSS_SB16_AUX_LINE: WORD = 44;
pub const MM_WSS_SB16_AUX_CD: WORD = 45;
pub const MM_WSS_SB16_MIXER: WORD = 46;
pub const MM_WSS_SBPRO_WAVEIN: WORD = 47;
pub const MM_WSS_SBPRO_WAVEOUT: WORD = 48;
pub const MM_WSS_SBPRO_MIDIIN: WORD = 49;
pub const MM_WSS_SBPRO_MIDIOUT: WORD = 50;
pub const MM_WSS_SBPRO_SYNTH: WORD = 51;
pub const MM_WSS_SBPRO_AUX_LINE: WORD = 52;
pub const MM_WSS_SBPRO_AUX_CD: WORD = 53;
pub const MM_WSS_SBPRO_MIXER: WORD = 54;
pub const MM_MSFT_WSS_NT_WAVEIN: WORD = 55;
pub const MM_MSFT_WSS_NT_WAVEOUT: WORD = 56;
pub const MM_MSFT_WSS_NT_FMSYNTH_STEREO: WORD = 57;
pub const MM_MSFT_WSS_NT_MIXER: WORD = 58;
pub const MM_MSFT_WSS_NT_AUX: WORD = 59;
pub const MM_MSFT_SB16_WAVEIN: WORD = 60;
pub const MM_MSFT_SB16_WAVEOUT: WORD = 61;
pub const MM_MSFT_SB16_MIDIIN: WORD = 62;
pub const MM_MSFT_SB16_MIDIOUT: WORD = 63;
pub const MM_MSFT_SB16_SYNTH: WORD = 64;
pub const MM_MSFT_SB16_AUX_LINE: WORD = 65;
pub const MM_MSFT_SB16_AUX_CD: WORD = 66;
pub const MM_MSFT_SB16_MIXER: WORD = 67;
pub const MM_MSFT_SBPRO_WAVEIN: WORD = 68;
pub const MM_MSFT_SBPRO_WAVEOUT: WORD = 69;
pub const MM_MSFT_SBPRO_MIDIIN: WORD = 70;
pub const MM_MSFT_SBPRO_MIDIOUT: WORD = 71;
pub const MM_MSFT_SBPRO_SYNTH: WORD = 72;
pub const MM_MSFT_SBPRO_AUX_LINE: WORD = 73;
pub const MM_MSFT_SBPRO_AUX_CD: WORD = 74;
pub const MM_MSFT_SBPRO_MIXER: WORD = 75;
pub const MM_MSFT_MSOPL_SYNTH: WORD = 76;
pub const MM_MSFT_VMDMS_LINE_WAVEIN: WORD = 80;
pub const MM_MSFT_VMDMS_LINE_WAVEOUT: WORD = 81;
pub const MM_MSFT_VMDMS_HANDSET_WAVEIN: WORD = 82;
pub const MM_MSFT_VMDMS_HANDSET_WAVEOUT: WORD = 83;
pub const MM_MSFT_VMDMW_LINE_WAVEIN: WORD = 84;
pub const MM_MSFT_VMDMW_LINE_WAVEOUT: WORD = 85;
pub const MM_MSFT_VMDMW_HANDSET_WAVEIN: WORD = 86;
pub const MM_MSFT_VMDMW_HANDSET_WAVEOUT: WORD = 87;
pub const MM_MSFT_VMDMW_MIXER: WORD = 88;
pub const MM_MSFT_VMDM_GAME_WAVEOUT: WORD = 89;
pub const MM_MSFT_VMDM_GAME_WAVEIN: WORD = 90;
pub const MM_MSFT_ACM_MSNAUDIO: WORD = 91;
pub const MM_MSFT_ACM_MSG723: WORD = 92;
pub const MM_MSFT_ACM_MSRT24: WORD = 93;
pub const MM_MSFT_WDMAUDIO_WAVEOUT: WORD = 100;
pub const MM_MSFT_WDMAUDIO_WAVEIN: WORD = 101;
pub const MM_MSFT_WDMAUDIO_MIDIOUT: WORD = 102;
pub const MM_MSFT_WDMAUDIO_MIDIIN: WORD = 103;
pub const MM_MSFT_WDMAUDIO_MIXER: WORD = 104;
pub const MM_MSFT_WDMAUDIO_AUX: WORD = 105;
pub const MM_CREATIVE_SB15_WAVEIN: WORD = 1;
pub const MM_CREATIVE_SB20_WAVEIN: WORD = 2;
pub const MM_CREATIVE_SBPRO_WAVEIN: WORD = 3;
pub const MM_CREATIVE_SBP16_WAVEIN: WORD = 4;
pub const MM_CREATIVE_PHNBLST_WAVEIN: WORD = 5;
pub const MM_CREATIVE_SB15_WAVEOUT: WORD = 101;
pub const MM_CREATIVE_SB20_WAVEOUT: WORD = 102;
pub const MM_CREATIVE_SBPRO_WAVEOUT: WORD = 103;
pub const MM_CREATIVE_SBP16_WAVEOUT: WORD = 104;
pub const MM_CREATIVE_PHNBLST_WAVEOUT: WORD = 105;
pub const MM_CREATIVE_MIDIOUT: WORD = 201;
pub const MM_CREATIVE_MIDIIN: WORD = 202;
pub const MM_CREATIVE_FMSYNTH_MONO: WORD = 301;
pub const MM_CREATIVE_FMSYNTH_STEREO: WORD = 302;
pub const MM_CREATIVE_MIDI_AWE32: WORD = 303;
pub const MM_CREATIVE_AUX_CD: WORD = 401;
pub const MM_CREATIVE_AUX_LINE: WORD = 402;
pub const MM_CREATIVE_AUX_MIC: WORD = 403;
pub const MM_CREATIVE_AUX_MASTER: WORD = 404;
pub const MM_CREATIVE_AUX_PCSPK: WORD = 405;
pub const MM_CREATIVE_AUX_WAVE: WORD = 406;
pub const MM_CREATIVE_AUX_MIDI: WORD = 407;
pub const MM_CREATIVE_SBPRO_MIXER: WORD = 408;
pub const MM_CREATIVE_SB16_MIXER: WORD = 409;
pub const MM_MEDIAVISION_PROAUDIO: WORD = 0x10;
pub const MM_PROAUD_MIDIOUT: WORD = MM_MEDIAVISION_PROAUDIO + 1;
pub const MM_PROAUD_MIDIIN: WORD = MM_MEDIAVISION_PROAUDIO + 2;
pub const MM_PROAUD_SYNTH: WORD = MM_MEDIAVISION_PROAUDIO + 3;
pub const MM_PROAUD_WAVEOUT: WORD = MM_MEDIAVISION_PROAUDIO + 4;
pub const MM_PROAUD_WAVEIN: WORD = MM_MEDIAVISION_PROAUDIO + 5;
pub const MM_PROAUD_MIXER: WORD = MM_MEDIAVISION_PROAUDIO + 6;
pub const MM_PROAUD_AUX: WORD = MM_MEDIAVISION_PROAUDIO + 7;
pub const MM_MEDIAVISION_THUNDER: WORD = 0x20;
pub const MM_THUNDER_SYNTH: WORD = MM_MEDIAVISION_THUNDER + 3;
pub const MM_THUNDER_WAVEOUT: WORD = MM_MEDIAVISION_THUNDER + 4;
pub const MM_THUNDER_WAVEIN: WORD = MM_MEDIAVISION_THUNDER + 5;
pub const MM_THUNDER_AUX: WORD = MM_MEDIAVISION_THUNDER + 7;
pub const MM_MEDIAVISION_TPORT: WORD = 0x40;
pub const MM_TPORT_WAVEOUT: WORD = MM_MEDIAVISION_TPORT + 1;
pub const MM_TPORT_WAVEIN: WORD = MM_MEDIAVISION_TPORT + 2;
pub const MM_TPORT_SYNTH: WORD = MM_MEDIAVISION_TPORT + 3;
pub const MM_MEDIAVISION_PROAUDIO_PLUS: WORD = 0x50;
pub const MM_PROAUD_PLUS_MIDIOUT: WORD = MM_MEDIAVISION_PROAUDIO_PLUS + 1;
pub const MM_PROAUD_PLUS_MIDIIN: WORD = MM_MEDIAVISION_PROAUDIO_PLUS + 2;
pub const MM_PROAUD_PLUS_SYNTH: WORD = MM_MEDIAVISION_PROAUDIO_PLUS + 3;
pub const MM_PROAUD_PLUS_WAVEOUT: WORD = MM_MEDIAVISION_PROAUDIO_PLUS + 4;
pub const MM_PROAUD_PLUS_WAVEIN: WORD = MM_MEDIAVISION_PROAUDIO_PLUS + 5;
pub const MM_PROAUD_PLUS_MIXER: WORD = MM_MEDIAVISION_PROAUDIO_PLUS + 6;
pub const MM_PROAUD_PLUS_AUX: WORD = MM_MEDIAVISION_PROAUDIO_PLUS + 7;
pub const MM_MEDIAVISION_PROAUDIO_16: WORD = 0x60;
pub const MM_PROAUD_16_MIDIOUT: WORD = MM_MEDIAVISION_PROAUDIO_16 + 1;
pub const MM_PROAUD_16_MIDIIN: WORD = MM_MEDIAVISION_PROAUDIO_16 + 2;
pub const MM_PROAUD_16_SYNTH: WORD = MM_MEDIAVISION_PROAUDIO_16 + 3;
pub const MM_PROAUD_16_WAVEOUT: WORD = MM_MEDIAVISION_PROAUDIO_16 + 4;
pub const MM_PROAUD_16_WAVEIN: WORD = MM_MEDIAVISION_PROAUDIO_16 + 5;
pub const MM_PROAUD_16_MIXER: WORD = MM_MEDIAVISION_PROAUDIO_16 + 6;
pub const MM_PROAUD_16_AUX: WORD = MM_MEDIAVISION_PROAUDIO_16 + 7;
pub const MM_MEDIAVISION_PROSTUDIO_16: WORD = 0x60;
pub const MM_STUDIO_16_MIDIOUT: WORD = MM_MEDIAVISION_PROSTUDIO_16 + 1;
pub const MM_STUDIO_16_MIDIIN: WORD = MM_MEDIAVISION_PROSTUDIO_16 + 2;
pub const MM_STUDIO_16_SYNTH: WORD = MM_MEDIAVISION_PROSTUDIO_16 + 3;
pub const MM_STUDIO_16_WAVEOUT: WORD = MM_MEDIAVISION_PROSTUDIO_16 + 4;
pub const MM_STUDIO_16_WAVEIN: WORD = MM_MEDIAVISION_PROSTUDIO_16 + 5;
pub const MM_STUDIO_16_MIXER: WORD = MM_MEDIAVISION_PROSTUDIO_16 + 6;
pub const MM_STUDIO_16_AUX: WORD = MM_MEDIAVISION_PROSTUDIO_16 + 7;
pub const MM_MEDIAVISION_CDPC: WORD = 0x70;
pub const MM_CDPC_MIDIOUT: WORD = MM_MEDIAVISION_CDPC + 1;
pub const MM_CDPC_MIDIIN: WORD = MM_MEDIAVISION_CDPC + 2;
pub const MM_CDPC_SYNTH: WORD = MM_MEDIAVISION_CDPC + 3;
pub const MM_CDPC_WAVEOUT: WORD = MM_MEDIAVISION_CDPC + 4;
pub const MM_CDPC_WAVEIN: WORD = MM_MEDIAVISION_CDPC + 5;
pub const MM_CDPC_MIXER: WORD = MM_MEDIAVISION_CDPC + 6;
pub const MM_CDPC_AUX: WORD = MM_MEDIAVISION_CDPC + 7;
pub const MM_MEDIAVISION_OPUS1208: WORD = 0x80;
pub const MM_OPUS401_MIDIOUT: WORD = MM_MEDIAVISION_OPUS1208 + 1;
pub const MM_OPUS401_MIDIIN: WORD = MM_MEDIAVISION_OPUS1208 + 2;
pub const MM_OPUS1208_SYNTH: WORD = MM_MEDIAVISION_OPUS1208 + 3;
pub const MM_OPUS1208_WAVEOUT: WORD = MM_MEDIAVISION_OPUS1208 + 4;
pub const MM_OPUS1208_WAVEIN: WORD = MM_MEDIAVISION_OPUS1208 + 5;
pub const MM_OPUS1208_MIXER: WORD = MM_MEDIAVISION_OPUS1208 + 6;
pub const MM_OPUS1208_AUX: WORD = MM_MEDIAVISION_OPUS1208 + 7;
pub const MM_MEDIAVISION_OPUS1216: WORD = 0x90;
pub const MM_OPUS1216_MIDIOUT: WORD = MM_MEDIAVISION_OPUS1216 + 1;
pub const MM_OPUS1216_MIDIIN: WORD = MM_MEDIAVISION_OPUS1216 + 2;
pub const MM_OPUS1216_SYNTH: WORD = MM_MEDIAVISION_OPUS1216 + 3;
pub const MM_OPUS1216_WAVEOUT: WORD = MM_MEDIAVISION_OPUS1216 + 4;
pub const MM_OPUS1216_WAVEIN: WORD = MM_MEDIAVISION_OPUS1216 + 5;
pub const MM_OPUS1216_MIXER: WORD = MM_MEDIAVISION_OPUS1216 + 6;
pub const MM_OPUS1216_AUX: WORD = MM_MEDIAVISION_OPUS1216 + 7;
pub const MM_CYRIX_XASYNTH: WORD = 1;
pub const MM_CYRIX_XAMIDIIN: WORD = 2;
pub const MM_CYRIX_XAMIDIOUT: WORD = 3;
pub const MM_CYRIX_XAWAVEIN: WORD = 4;
pub const MM_CYRIX_XAWAVEOUT: WORD = 5;
pub const MM_CYRIX_XAAUX: WORD = 6;
pub const MM_CYRIX_XAMIXER: WORD = 7;
pub const MM_PHILIPS_ACM_LPCBB: WORD = 1;
pub const MM_NETXL_XLVIDEO: WORD = 1;
pub const MM_ZYXEL_ACM_ADPCM: WORD = 1;
pub const MM_AARDVARK_STUDIO12_WAVEOUT: WORD = 1;
pub const MM_AARDVARK_STUDIO12_WAVEIN: WORD = 2;
pub const MM_AARDVARK_STUDIO88_WAVEOUT: WORD = 3;
pub const MM_AARDVARK_STUDIO88_WAVEIN: WORD = 4;
pub const MM_BINTEC_TAPI_WAVE: WORD = 1;
pub const MM_HEWLETT_PACKARD_CU_CODEC: WORD = 1;
pub const MM_MITEL_TALKTO_LINE_WAVEOUT: WORD = 100;
pub const MM_MITEL_TALKTO_LINE_WAVEIN: WORD = 101;
pub const MM_MITEL_TALKTO_HANDSET_WAVEOUT: WORD = 102;
pub const MM_MITEL_TALKTO_HANDSET_WAVEIN: WORD = 103;
pub const MM_MITEL_TALKTO_BRIDGED_WAVEOUT: WORD = 104;
pub const MM_MITEL_TALKTO_BRIDGED_WAVEIN: WORD = 105;
pub const MM_MITEL_MPA_HANDSET_WAVEOUT: WORD = 200;
pub const MM_MITEL_MPA_HANDSET_WAVEIN: WORD = 201;
pub const MM_MITEL_MPA_HANDSFREE_WAVEOUT: WORD = 202;
pub const MM_MITEL_MPA_HANDSFREE_WAVEIN: WORD = 203;
pub const MM_MITEL_MPA_LINE1_WAVEOUT: WORD = 204;
pub const MM_MITEL_MPA_LINE1_WAVEIN: WORD = 205;
pub const MM_MITEL_MPA_LINE2_WAVEOUT: WORD = 206;
pub const MM_MITEL_MPA_LINE2_WAVEIN: WORD = 207;
pub const MM_MITEL_MEDIAPATH_WAVEOUT: WORD = 300;
pub const MM_MITEL_MEDIAPATH_WAVEIN: WORD = 301;
pub const MM_SNI_ACM_G721: WORD = 1;
pub const MM_EMU_APSSYNTH: WORD = 1;
pub const MM_EMU_APSMIDIIN: WORD = 2;
pub const MM_EMU_APSMIDIOUT: WORD = 3;
pub const MM_EMU_APSWAVEIN: WORD = 4;
pub const MM_EMU_APSWAVEOUT: WORD = 5;
pub const MM_ARTISOFT_SBWAVEIN: WORD = 1;
pub const MM_ARTISOFT_SBWAVEOUT: WORD = 2;
pub const MM_TBS_TROPEZ_WAVEIN: WORD = 37;
pub const MM_TBS_TROPEZ_WAVEOUT: WORD = 38;
pub const MM_TBS_TROPEZ_AUX1: WORD = 39;
pub const MM_TBS_TROPEZ_AUX2: WORD = 40;
pub const MM_TBS_TROPEZ_LINE: WORD = 41;
pub const MM_MMOTION_WAVEAUX: WORD = 1;
pub const MM_MMOTION_WAVEOUT: WORD = 2;
pub const MM_MMOTION_WAVEIN: WORD = 3;
pub const MM_IBM_PCMCIA_WAVEIN: WORD = 11;
pub const MM_IBM_PCMCIA_WAVEOUT: WORD = 12;
pub const MM_IBM_PCMCIA_SYNTH: WORD = 13;
pub const MM_IBM_PCMCIA_MIDIIN: WORD = 14;
pub const MM_IBM_PCMCIA_MIDIOUT: WORD = 15;
pub const MM_IBM_PCMCIA_AUX: WORD = 16;
pub const MM_IBM_THINKPAD200: WORD = 17;
pub const MM_IBM_MWAVE_WAVEIN: WORD = 18;
pub const MM_IBM_MWAVE_WAVEOUT: WORD = 19;
pub const MM_IBM_MWAVE_MIXER: WORD = 20;
pub const MM_IBM_MWAVE_MIDIIN: WORD = 21;
pub const MM_IBM_MWAVE_MIDIOUT: WORD = 22;
pub const MM_IBM_MWAVE_AUX: WORD = 23;
pub const MM_IBM_WC_MIDIOUT: WORD = 30;
pub const MM_IBM_WC_WAVEOUT: WORD = 31;
pub const MM_IBM_WC_MIXEROUT: WORD = 33;
pub const MM_VOCALTEC_WAVEOUT: WORD = 1;
pub const MM_VOCALTEC_WAVEIN: WORD = 2;
pub const MM_ROLAND_RAP10_MIDIOUT: WORD = 10;
pub const MM_ROLAND_RAP10_MIDIIN: WORD = 11;
pub const MM_ROLAND_RAP10_SYNTH: WORD = 12;
pub const MM_ROLAND_RAP10_WAVEOUT: WORD = 13;
pub const MM_ROLAND_RAP10_WAVEIN: WORD = 14;
pub const MM_ROLAND_MPU401_MIDIOUT: WORD = 15;
pub const MM_ROLAND_MPU401_MIDIIN: WORD = 16;
pub const MM_ROLAND_SMPU_MIDIOUTA: WORD = 17;
pub const MM_ROLAND_SMPU_MIDIOUTB: WORD = 18;
pub const MM_ROLAND_SMPU_MIDIINA: WORD = 19;
pub const MM_ROLAND_SMPU_MIDIINB: WORD = 20;
pub const MM_ROLAND_SC7_MIDIOUT: WORD = 21;
pub const MM_ROLAND_SC7_MIDIIN: WORD = 22;
pub const MM_ROLAND_SERIAL_MIDIOUT: WORD = 23;
pub const MM_ROLAND_SERIAL_MIDIIN: WORD = 24;
pub const MM_ROLAND_SCP_MIDIOUT: WORD = 38;
pub const MM_ROLAND_SCP_MIDIIN: WORD = 39;
pub const MM_ROLAND_SCP_WAVEOUT: WORD = 40;
pub const MM_ROLAND_SCP_WAVEIN: WORD = 41;
pub const MM_ROLAND_SCP_MIXER: WORD = 42;
pub const MM_ROLAND_SCP_AUX: WORD = 48;
pub const MM_DSP_SOLUTIONS_WAVEOUT: WORD = 1;
pub const MM_DSP_SOLUTIONS_WAVEIN: WORD = 2;
pub const MM_DSP_SOLUTIONS_SYNTH: WORD = 3;
pub const MM_DSP_SOLUTIONS_AUX: WORD = 4;
pub const MM_NEC_73_86_SYNTH: WORD = 5;
pub const MM_NEC_73_86_WAVEOUT: WORD = 6;
pub const MM_NEC_73_86_WAVEIN: WORD = 7;
pub const MM_NEC_26_SYNTH: WORD = 9;
pub const MM_NEC_MPU401_MIDIOUT: WORD = 10;
pub const MM_NEC_MPU401_MIDIIN: WORD = 11;
pub const MM_NEC_JOYSTICK: WORD = 12;
pub const MM_WANGLABS_WAVEIN1: WORD = 1;
pub const MM_WANGLABS_WAVEOUT1: WORD = 2;
pub const MM_TANDY_VISWAVEIN: WORD = 1;
pub const MM_TANDY_VISWAVEOUT: WORD = 2;
pub const MM_TANDY_VISBIOSSYNTH: WORD = 3;
pub const MM_TANDY_SENS_MMAWAVEIN: WORD = 4;
pub const MM_TANDY_SENS_MMAWAVEOUT: WORD = 5;
pub const MM_TANDY_SENS_MMAMIDIIN: WORD = 6;
pub const MM_TANDY_SENS_MMAMIDIOUT: WORD = 7;
pub const MM_TANDY_SENS_VISWAVEOUT: WORD = 8;
pub const MM_TANDY_PSSJWAVEIN: WORD = 9;
pub const MM_TANDY_PSSJWAVEOUT: WORD = 10;
pub const MM_ANTEX_SX12_WAVEIN: WORD = 1;
pub const MM_ANTEX_SX12_WAVEOUT: WORD = 2;
pub const MM_ANTEX_SX15_WAVEIN: WORD = 3;
pub const MM_ANTEX_SX15_WAVEOUT: WORD = 4;
pub const MM_ANTEX_VP625_WAVEIN: WORD = 5;
pub const MM_ANTEX_VP625_WAVEOUT: WORD = 6;
pub const MM_ANTEX_AUDIOPORT22_WAVEIN: WORD = 7;
pub const MM_ANTEX_AUDIOPORT22_WAVEOUT: WORD = 8;
pub const MM_ANTEX_AUDIOPORT22_FEEDTHRU: WORD = 9;
pub const MM_INTELOPD_WAVEIN: WORD = 1;
pub const MM_INTELOPD_WAVEOUT: WORD = 101;
pub const MM_INTELOPD_AUX: WORD = 401;
pub const MM_INTEL_NSPMODEMLINEIN: WORD = 501;
pub const MM_INTEL_NSPMODEMLINEOUT: WORD = 502;
pub const MM_VAL_MICROKEY_AP_WAVEIN: WORD = 1;
pub const MM_VAL_MICROKEY_AP_WAVEOUT: WORD = 2;
pub const MM_INTERACTIVE_WAVEIN: WORD = 0x45;
pub const MM_INTERACTIVE_WAVEOUT: WORD = 0x45;
pub const MM_YAMAHA_GSS_SYNTH: WORD = 0x01;
pub const MM_YAMAHA_GSS_WAVEOUT: WORD = 0x02;
pub const MM_YAMAHA_GSS_WAVEIN: WORD = 0x03;
pub const MM_YAMAHA_GSS_MIDIOUT: WORD = 0x04;
pub const MM_YAMAHA_GSS_MIDIIN: WORD = 0x05;
pub const MM_YAMAHA_GSS_AUX: WORD = 0x06;
pub const MM_YAMAHA_SERIAL_MIDIOUT: WORD = 0x07;
pub const MM_YAMAHA_SERIAL_MIDIIN: WORD = 0x08;
pub const MM_YAMAHA_OPL3SA_WAVEOUT: WORD = 0x10;
pub const MM_YAMAHA_OPL3SA_WAVEIN: WORD = 0x11;
pub const MM_YAMAHA_OPL3SA_FMSYNTH: WORD = 0x12;
pub const MM_YAMAHA_OPL3SA_YSYNTH: WORD = 0x13;
pub const MM_YAMAHA_OPL3SA_MIDIOUT: WORD = 0x14;
pub const MM_YAMAHA_OPL3SA_MIDIIN: WORD = 0x15;
pub const MM_YAMAHA_OPL3SA_MIXER: WORD = 0x17;
pub const MM_YAMAHA_OPL3SA_JOYSTICK: WORD = 0x18;
pub const MM_YAMAHA_YMF724LEG_MIDIOUT: WORD = 0x19;
pub const MM_YAMAHA_YMF724LEG_MIDIIN: WORD = 0x1a;
pub const MM_YAMAHA_YMF724_WAVEOUT: WORD = 0x1b;
pub const MM_YAMAHA_YMF724_WAVEIN: WORD = 0x1c;
pub const MM_YAMAHA_YMF724_MIDIOUT: WORD = 0x1d;
pub const MM_YAMAHA_YMF724_AUX: WORD = 0x1e;
pub const MM_YAMAHA_YMF724_MIXER: WORD = 0x1f;
pub const MM_YAMAHA_YMF724LEG_FMSYNTH: WORD = 0x20;
pub const MM_YAMAHA_YMF724LEG_MIXER: WORD = 0x21;
pub const MM_YAMAHA_SXG_MIDIOUT: WORD = 0x22;
pub const MM_YAMAHA_SXG_WAVEOUT: WORD = 0x23;
pub const MM_YAMAHA_SXG_MIXER: WORD = 0x24;
pub const MM_YAMAHA_ACXG_WAVEIN: WORD = 0x25;
pub const MM_YAMAHA_ACXG_WAVEOUT: WORD = 0x26;
pub const MM_YAMAHA_ACXG_MIDIOUT: WORD = 0x27;
pub const MM_YAMAHA_ACXG_MIXER: WORD = 0x28;
pub const MM_YAMAHA_ACXG_AUX: WORD = 0x29;
pub const MM_EVEREX_CARRIER: WORD = 1;
pub const MM_ECHO_SYNTH: WORD = 1;
pub const MM_ECHO_WAVEOUT: WORD = 2;
pub const MM_ECHO_WAVEIN: WORD = 3;
pub const MM_ECHO_MIDIOUT: WORD = 4;
pub const MM_ECHO_MIDIIN: WORD = 5;
pub const MM_ECHO_AUX: WORD = 6;
pub const MM_SIERRA_ARIA_MIDIOUT: WORD = 0x14;
pub const MM_SIERRA_ARIA_MIDIIN: WORD = 0x15;
pub const MM_SIERRA_ARIA_SYNTH: WORD = 0x16;
pub const MM_SIERRA_ARIA_WAVEOUT: WORD = 0x17;
pub const MM_SIERRA_ARIA_WAVEIN: WORD = 0x18;
pub const MM_SIERRA_ARIA_AUX: WORD = 0x19;
pub const MM_SIERRA_ARIA_AUX2: WORD = 0x20;
pub const MM_SIERRA_QUARTET_WAVEIN: WORD = 0x50;
pub const MM_SIERRA_QUARTET_WAVEOUT: WORD = 0x51;
pub const MM_SIERRA_QUARTET_MIDIIN: WORD = 0x52;
pub const MM_SIERRA_QUARTET_MIDIOUT: WORD = 0x53;
pub const MM_SIERRA_QUARTET_SYNTH: WORD = 0x54;
pub const MM_SIERRA_QUARTET_AUX_CD: WORD = 0x55;
pub const MM_SIERRA_QUARTET_AUX_LINE: WORD = 0x56;
pub const MM_SIERRA_QUARTET_AUX_MODEM: WORD = 0x57;
pub const MM_SIERRA_QUARTET_MIXER: WORD = 0x58;
pub const MM_CAT_WAVEOUT: WORD = 1;
pub const MM_DSP_GROUP_TRUESPEECH: WORD = 1;
pub const MM_MELABS_MIDI2GO: WORD = 1;
pub const MM_ESS_AMWAVEOUT: WORD = 0x01;
pub const MM_ESS_AMWAVEIN: WORD = 0x02;
pub const MM_ESS_AMAUX: WORD = 0x03;
pub const MM_ESS_AMSYNTH: WORD = 0x04;
pub const MM_ESS_AMMIDIOUT: WORD = 0x05;
pub const MM_ESS_AMMIDIIN: WORD = 0x06;
pub const MM_ESS_MIXER: WORD = 0x07;
pub const MM_ESS_AUX_CD: WORD = 0x08;
pub const MM_ESS_MPU401_MIDIOUT: WORD = 0x09;
pub const MM_ESS_MPU401_MIDIIN: WORD = 0x0A;
pub const MM_ESS_ES488_WAVEOUT: WORD = 0x10;
pub const MM_ESS_ES488_WAVEIN: WORD = 0x11;
pub const MM_ESS_ES488_MIXER: WORD = 0x12;
pub const MM_ESS_ES688_WAVEOUT: WORD = 0x13;
pub const MM_ESS_ES688_WAVEIN: WORD = 0x14;
pub const MM_ESS_ES688_MIXER: WORD = 0x15;
pub const MM_ESS_ES1488_WAVEOUT: WORD = 0x16;
pub const MM_ESS_ES1488_WAVEIN: WORD = 0x17;
pub const MM_ESS_ES1488_MIXER: WORD = 0x18;
pub const MM_ESS_ES1688_WAVEOUT: WORD = 0x19;
pub const MM_ESS_ES1688_WAVEIN: WORD = 0x1A;
pub const MM_ESS_ES1688_MIXER: WORD = 0x1B;
pub const MM_ESS_ES1788_WAVEOUT: WORD = 0x1C;
pub const MM_ESS_ES1788_WAVEIN: WORD = 0x1D;
pub const MM_ESS_ES1788_MIXER: WORD = 0x1E;
pub const MM_ESS_ES1888_WAVEOUT: WORD = 0x1F;
pub const MM_ESS_ES1888_WAVEIN: WORD = 0x20;
pub const MM_ESS_ES1888_MIXER: WORD = 0x21;
pub const MM_ESS_ES1868_WAVEOUT: WORD = 0x22;
pub const MM_ESS_ES1868_WAVEIN: WORD = 0x23;
pub const MM_ESS_ES1868_MIXER: WORD = 0x24;
pub const MM_ESS_ES1878_WAVEOUT: WORD = 0x25;
pub const MM_ESS_ES1878_WAVEIN: WORD = 0x26;
pub const MM_ESS_ES1878_MIXER: WORD = 0x27;
pub const MM_CANOPUS_ACM_DVREX: WORD = 1;
pub const MM_EPS_FMSND: WORD = 1;
pub const MM_TRUEVISION_WAVEIN1: WORD = 1;
pub const MM_TRUEVISION_WAVEOUT1: WORD = 2;
pub const MM_AZTECH_MIDIOUT: WORD = 3;
pub const MM_AZTECH_MIDIIN: WORD = 4;
pub const MM_AZTECH_WAVEIN: WORD = 17;
pub const MM_AZTECH_WAVEOUT: WORD = 18;
pub const MM_AZTECH_FMSYNTH: WORD = 20;
pub const MM_AZTECH_MIXER: WORD = 21;
pub const MM_AZTECH_PRO16_WAVEIN: WORD = 33;
pub const MM_AZTECH_PRO16_WAVEOUT: WORD = 34;
pub const MM_AZTECH_PRO16_FMSYNTH: WORD = 38;
pub const MM_AZTECH_DSP16_WAVEIN: WORD = 65;
pub const MM_AZTECH_DSP16_WAVEOUT: WORD = 66;
pub const MM_AZTECH_DSP16_FMSYNTH: WORD = 68;
pub const MM_AZTECH_DSP16_WAVESYNTH: WORD = 70;
pub const MM_AZTECH_NOVA16_WAVEIN: WORD = 71;
pub const MM_AZTECH_NOVA16_WAVEOUT: WORD = 72;
pub const MM_AZTECH_NOVA16_MIXER: WORD = 73;
pub const MM_AZTECH_WASH16_WAVEIN: WORD = 74;
pub const MM_AZTECH_WASH16_WAVEOUT: WORD = 75;
pub const MM_AZTECH_WASH16_MIXER: WORD = 76;
pub const MM_AZTECH_AUX_CD: WORD = 401;
pub const MM_AZTECH_AUX_LINE: WORD = 402;
pub const MM_AZTECH_AUX_MIC: WORD = 403;
pub const MM_AZTECH_AUX: WORD = 404;
pub const MM_VIDEOLOGIC_MSWAVEIN: WORD = 1;
pub const MM_VIDEOLOGIC_MSWAVEOUT: WORD = 2;
pub const MM_KORG_PCIF_MIDIOUT: WORD = 1;
pub const MM_KORG_PCIF_MIDIIN: WORD = 2;
pub const MM_KORG_1212IO_MSWAVEIN: WORD = 3;
pub const MM_KORG_1212IO_MSWAVEOUT: WORD = 4;
pub const MM_APT_ACE100CD: WORD = 1;
pub const MM_ICS_WAVEDECK_WAVEOUT: WORD = 1;
pub const MM_ICS_WAVEDECK_WAVEIN: WORD = 2;
pub const MM_ICS_WAVEDECK_MIXER: WORD = 3;
pub const MM_ICS_WAVEDECK_AUX: WORD = 4;
pub const MM_ICS_WAVEDECK_SYNTH: WORD = 5;
pub const MM_ICS_WAVEDEC_SB_WAVEOUT: WORD = 6;
pub const MM_ICS_WAVEDEC_SB_WAVEIN: WORD = 7;
pub const MM_ICS_WAVEDEC_SB_FM_MIDIOUT: WORD = 8;
pub const MM_ICS_WAVEDEC_SB_MPU401_MIDIOUT: WORD = 9;
pub const MM_ICS_WAVEDEC_SB_MPU401_MIDIIN: WORD = 10;
pub const MM_ICS_WAVEDEC_SB_MIXER: WORD = 11;
pub const MM_ICS_WAVEDEC_SB_AUX: WORD = 12;
pub const MM_ICS_2115_LITE_MIDIOUT: WORD = 13;
pub const MM_ICS_2120_LITE_MIDIOUT: WORD = 14;
pub const MM_ITERATEDSYS_FUFCODEC: WORD = 1;
pub const MM_METHEUS_ZIPPER: WORD = 1;
pub const MM_WINNOV_CAVIAR_WAVEIN: WORD = 1;
pub const MM_WINNOV_CAVIAR_WAVEOUT: WORD = 2;
pub const MM_WINNOV_CAVIAR_VIDC: WORD = 3;
pub const MM_WINNOV_CAVIAR_CHAMPAGNE: WORD = 4;
pub const MM_WINNOV_CAVIAR_YUV8: WORD = 5;
pub const MM_NCR_BA_WAVEIN: WORD = 1;
pub const MM_NCR_BA_WAVEOUT: WORD = 2;
pub const MM_NCR_BA_SYNTH: WORD = 3;
pub const MM_NCR_BA_AUX: WORD = 4;
pub const MM_NCR_BA_MIXER: WORD = 5;
pub const MM_AST_MODEMWAVE_WAVEIN: WORD = 13;
pub const MM_AST_MODEMWAVE_WAVEOUT: WORD = 14;
pub const MM_WILLOWPOND_FMSYNTH_STEREO: WORD = 20;
pub const MM_WILLOWPOND_MPU401: WORD = 21;
pub const MM_WILLOWPOND_SNDPORT_WAVEIN: WORD = 100;
pub const MM_WILLOWPOND_SNDPORT_WAVEOUT: WORD = 101;
pub const MM_WILLOWPOND_SNDPORT_MIXER: WORD = 102;
pub const MM_WILLOWPOND_SNDPORT_AUX: WORD = 103;
pub const MM_WILLOWPOND_PH_WAVEIN: WORD = 104;
pub const MM_WILLOWPOND_PH_WAVEOUT: WORD = 105;
pub const MM_WILLOWPOND_PH_MIXER: WORD = 106;
pub const MM_WILLOWPOND_PH_AUX: WORD = 107;
pub const MM_WILLOPOND_SNDCOMM_WAVEIN: WORD = 108;
pub const MM_WILLOWPOND_SNDCOMM_WAVEOUT: WORD = 109;
pub const MM_WILLOWPOND_SNDCOMM_MIXER: WORD = 110;
pub const MM_WILLOWPOND_SNDCOMM_AUX: WORD = 111;
pub const MM_WILLOWPOND_GENERIC_WAVEIN: WORD = 112;
pub const MM_WILLOWPOND_GENERIC_WAVEOUT: WORD = 113;
pub const MM_WILLOWPOND_GENERIC_MIXER: WORD = 114;
pub const MM_WILLOWPOND_GENERIC_AUX: WORD = 115;
pub const MM_VITEC_VMAKER: WORD = 1;
pub const MM_VITEC_VMPRO: WORD = 2;
pub const MM_MOSCOM_VPC2400_IN: WORD = 1;
pub const MM_MOSCOM_VPC2400_OUT: WORD = 2;
pub const MM_SILICONSOFT_SC1_WAVEIN: WORD = 1;
pub const MM_SILICONSOFT_SC1_WAVEOUT: WORD = 2;
pub const MM_SILICONSOFT_SC2_WAVEIN: WORD = 3;
pub const MM_SILICONSOFT_SC2_WAVEOUT: WORD = 4;
pub const MM_SILICONSOFT_SOUNDJR2_WAVEOUT: WORD = 5;
pub const MM_SILICONSOFT_SOUNDJR2PR_WAVEIN: WORD = 6;
pub const MM_SILICONSOFT_SOUNDJR2PR_WAVEOUT: WORD = 7;
pub const MM_SILICONSOFT_SOUNDJR3_WAVEOUT: WORD = 8;
pub const MM_TTEWS_WAVEIN: WORD = 1;
pub const MM_TTEWS_WAVEOUT: WORD = 2;
pub const MM_TTEWS_MIDIIN: WORD = 3;
pub const MM_TTEWS_MIDIOUT: WORD = 4;
pub const MM_TTEWS_MIDISYNTH: WORD = 5;
pub const MM_TTEWS_MIDIMONITOR: WORD = 6;
pub const MM_TTEWS_VMIDIIN: WORD = 7;
pub const MM_TTEWS_VMIDIOUT: WORD = 8;
pub const MM_TTEWS_AUX: WORD = 9;
pub const MM_TTEWS_MIXER: WORD = 10;
pub const MM_MEDIASONIC_ACM_G723: WORD = 1;
pub const MM_MEDIASONIC_ICOM: WORD = 2;
pub const MM_ICOM_WAVEIN: WORD = 3;
pub const MM_ICOM_WAVEOUT: WORD = 4;
pub const MM_ICOM_MIXER: WORD = 5;
pub const MM_ICOM_AUX: WORD = 6;
pub const MM_ICOM_LINE: WORD = 7;
pub const MM_SANYO_ACM_LD_ADPCM: WORD = 1;
pub const MM_AHEAD_MULTISOUND: WORD = 1;
pub const MM_AHEAD_SOUNDBLASTER: WORD = 2;
pub const MM_AHEAD_PROAUDIO: WORD = 3;
pub const MM_AHEAD_GENERIC: WORD = 4;
pub const MM_OLIVETTI_WAVEIN: WORD = 1;
pub const MM_OLIVETTI_WAVEOUT: WORD = 2;
pub const MM_OLIVETTI_MIXER: WORD = 3;
pub const MM_OLIVETTI_AUX: WORD = 4;
pub const MM_OLIVETTI_MIDIIN: WORD = 5;
pub const MM_OLIVETTI_MIDIOUT: WORD = 6;
pub const MM_OLIVETTI_SYNTH: WORD = 7;
pub const MM_OLIVETTI_JOYSTICK: WORD = 8;
pub const MM_OLIVETTI_ACM_GSM: WORD = 9;
pub const MM_OLIVETTI_ACM_ADPCM: WORD = 10;
pub const MM_OLIVETTI_ACM_CELP: WORD = 11;
pub const MM_OLIVETTI_ACM_SBC: WORD = 12;
pub const MM_OLIVETTI_ACM_OPR: WORD = 13;
pub const MM_IOMAGIC_TEMPO_WAVEOUT: WORD = 1;
pub const MM_IOMAGIC_TEMPO_WAVEIN: WORD = 2;
pub const MM_IOMAGIC_TEMPO_SYNTH: WORD = 3;
pub const MM_IOMAGIC_TEMPO_MIDIOUT: WORD = 4;
pub const MM_IOMAGIC_TEMPO_MXDOUT: WORD = 5;
pub const MM_IOMAGIC_TEMPO_AUXOUT: WORD = 6;
pub const MM_MATSUSHITA_WAVEIN: WORD = 1;
pub const MM_MATSUSHITA_WAVEOUT: WORD = 2;
pub const MM_MATSUSHITA_FMSYNTH_STEREO: WORD = 3;
pub const MM_MATSUSHITA_MIXER: WORD = 4;
pub const MM_MATSUSHITA_AUX: WORD = 5;
pub const MM_NEWMEDIA_WAVJAMMER: WORD = 1;
pub const MM_LYRRUS_BRIDGE_GUITAR: WORD = 1;
pub const MM_OPTI_M16_FMSYNTH_STEREO: WORD = 0x0001;
pub const MM_OPTI_M16_MIDIIN: WORD = 0x0002;
pub const MM_OPTI_M16_MIDIOUT: WORD = 0x0003;
pub const MM_OPTI_M16_WAVEIN: WORD = 0x0004;
pub const MM_OPTI_M16_WAVEOUT: WORD = 0x0005;
pub const MM_OPTI_M16_MIXER: WORD = 0x0006;
pub const MM_OPTI_M16_AUX: WORD = 0x0007;
pub const MM_OPTI_P16_FMSYNTH_STEREO: WORD = 0x0010;
pub const MM_OPTI_P16_MIDIIN: WORD = 0x0011;
pub const MM_OPTI_P16_MIDIOUT: WORD = 0x0012;
pub const MM_OPTI_P16_WAVEIN: WORD = 0x0013;
pub const MM_OPTI_P16_WAVEOUT: WORD = 0x0014;
pub const MM_OPTI_P16_MIXER: WORD = 0x0015;
pub const MM_OPTI_P16_AUX: WORD = 0x0016;
pub const MM_OPTI_M32_WAVEIN: WORD = 0x0020;
pub const MM_OPTI_M32_WAVEOUT: WORD = 0x0021;
pub const MM_OPTI_M32_MIDIIN: WORD = 0x0022;
pub const MM_OPTI_M32_MIDIOUT: WORD = 0x0023;
pub const MM_OPTI_M32_SYNTH_STEREO: WORD = 0x0024;
pub const MM_OPTI_M32_MIXER: WORD = 0x0025;
pub const MM_OPTI_M32_AUX: WORD = 0x0026;
pub const MM_COMPAQ_BB_WAVEIN: WORD = 1;
pub const MM_COMPAQ_BB_WAVEOUT: WORD = 2;
pub const MM_COMPAQ_BB_WAVEAUX: WORD = 3;
pub const MM_MPTUS_SPWAVEOUT: WORD = 1;
pub const MM_LERNOUT_ANDHAUSPIE_LHCODECACM: WORD = 1;
pub const MM_DIGITAL_AV320_WAVEIN: WORD = 1;
pub const MM_DIGITAL_AV320_WAVEOUT: WORD = 2;
pub const MM_DIGITAL_ACM_G723: WORD = 3;
pub const MM_DIGITAL_ICM_H263: WORD = 4;
pub const MM_DIGITAL_ICM_H261: WORD = 5;
pub const MM_MOTU_MTP_MIDIOUT_ALL: WORD = 100;
pub const MM_MOTU_MTP_MIDIIN_1: WORD = 101;
pub const MM_MOTU_MTP_MIDIOUT_1: WORD = 101;
pub const MM_MOTU_MTP_MIDIIN_2: WORD = 102;
pub const MM_MOTU_MTP_MIDIOUT_2: WORD = 102;
pub const MM_MOTU_MTP_MIDIIN_3: WORD = 103;
pub const MM_MOTU_MTP_MIDIOUT_3: WORD = 103;
pub const MM_MOTU_MTP_MIDIIN_4: WORD = 104;
pub const MM_MOTU_MTP_MIDIOUT_4: WORD = 104;
pub const MM_MOTU_MTP_MIDIIN_5: WORD = 105;
pub const MM_MOTU_MTP_MIDIOUT_5: WORD = 105;
pub const MM_MOTU_MTP_MIDIIN_6: WORD = 106;
pub const MM_MOTU_MTP_MIDIOUT_6: WORD = 106;
pub const MM_MOTU_MTP_MIDIIN_7: WORD = 107;
pub const MM_MOTU_MTP_MIDIOUT_7: WORD = 107;
pub const MM_MOTU_MTP_MIDIIN_8: WORD = 108;
pub const MM_MOTU_MTP_MIDIOUT_8: WORD = 108;
pub const MM_MOTU_MTPII_MIDIOUT_ALL: WORD = 200;
pub const MM_MOTU_MTPII_MIDIIN_SYNC: WORD = 200;
pub const MM_MOTU_MTPII_MIDIIN_1: WORD = 201;
pub const MM_MOTU_MTPII_MIDIOUT_1: WORD = 201;
pub const MM_MOTU_MTPII_MIDIIN_2: WORD = 202;
pub const MM_MOTU_MTPII_MIDIOUT_2: WORD = 202;
pub const MM_MOTU_MTPII_MIDIIN_3: WORD = 203;
pub const MM_MOTU_MTPII_MIDIOUT_3: WORD = 203;
pub const MM_MOTU_MTPII_MIDIIN_4: WORD = 204;
pub const MM_MOTU_MTPII_MIDIOUT_4: WORD = 204;
pub const MM_MOTU_MTPII_MIDIIN_5: WORD = 205;
pub const MM_MOTU_MTPII_MIDIOUT_5: WORD = 205;
pub const MM_MOTU_MTPII_MIDIIN_6: WORD = 206;
pub const MM_MOTU_MTPII_MIDIOUT_6: WORD = 206;
pub const MM_MOTU_MTPII_MIDIIN_7: WORD = 207;
pub const MM_MOTU_MTPII_MIDIOUT_7: WORD = 207;
pub const MM_MOTU_MTPII_MIDIIN_8: WORD = 208;
pub const MM_MOTU_MTPII_MIDIOUT_8: WORD = 208;
pub const MM_MOTU_MTPII_NET_MIDIIN_1: WORD = 209;
pub const MM_MOTU_MTPII_NET_MIDIOUT_1: WORD = 209;
pub const MM_MOTU_MTPII_NET_MIDIIN_2: WORD = 210;
pub const MM_MOTU_MTPII_NET_MIDIOUT_2: WORD = 210;
pub const MM_MOTU_MTPII_NET_MIDIIN_3: WORD = 211;
pub const MM_MOTU_MTPII_NET_MIDIOUT_3: WORD = 211;
pub const MM_MOTU_MTPII_NET_MIDIIN_4: WORD = 212;
pub const MM_MOTU_MTPII_NET_MIDIOUT_4: WORD = 212;
pub const MM_MOTU_MTPII_NET_MIDIIN_5: WORD = 213;
pub const MM_MOTU_MTPII_NET_MIDIOUT_5: WORD = 213;
pub const MM_MOTU_MTPII_NET_MIDIIN_6: WORD = 214;
pub const MM_MOTU_MTPII_NET_MIDIOUT_6: WORD = 214;
pub const MM_MOTU_MTPII_NET_MIDIIN_7: WORD = 215;
pub const MM_MOTU_MTPII_NET_MIDIOUT_7: WORD = 215;
pub const MM_MOTU_MTPII_NET_MIDIIN_8: WORD = 216;
pub const MM_MOTU_MTPII_NET_MIDIOUT_8: WORD = 216;
pub const MM_MOTU_MXP_MIDIIN_MIDIOUT_ALL: WORD = 300;
pub const MM_MOTU_MXP_MIDIIN_SYNC: WORD = 300;
pub const MM_MOTU_MXP_MIDIIN_MIDIIN_1: WORD = 301;
pub const MM_MOTU_MXP_MIDIIN_MIDIOUT_1: WORD = 301;
pub const MM_MOTU_MXP_MIDIIN_MIDIIN_2: WORD = 302;
pub const MM_MOTU_MXP_MIDIIN_MIDIOUT_2: WORD = 302;
pub const MM_MOTU_MXP_MIDIIN_MIDIIN_3: WORD = 303;
pub const MM_MOTU_MXP_MIDIIN_MIDIOUT_3: WORD = 303;
pub const MM_MOTU_MXP_MIDIIN_MIDIIN_4: WORD = 304;
pub const MM_MOTU_MXP_MIDIIN_MIDIOUT_4: WORD = 304;
pub const MM_MOTU_MXP_MIDIIN_MIDIIN_5: WORD = 305;
pub const MM_MOTU_MXP_MIDIIN_MIDIOUT_5: WORD = 305;
pub const MM_MOTU_MXP_MIDIIN_MIDIIN_6: WORD = 306;
pub const MM_MOTU_MXP_MIDIIN_MIDIOUT_6: WORD = 306;
pub const MM_MOTU_MXPMPU_MIDIOUT_ALL: WORD = 400;
pub const MM_MOTU_MXPMPU_MIDIIN_SYNC: WORD = 400;
pub const MM_MOTU_MXPMPU_MIDIIN_1: WORD = 401;
pub const MM_MOTU_MXPMPU_MIDIOUT_1: WORD = 401;
pub const MM_MOTU_MXPMPU_MIDIIN_2: WORD = 402;
pub const MM_MOTU_MXPMPU_MIDIOUT_2: WORD = 402;
pub const MM_MOTU_MXPMPU_MIDIIN_3: WORD = 403;
pub const MM_MOTU_MXPMPU_MIDIOUT_3: WORD = 403;
pub const MM_MOTU_MXPMPU_MIDIIN_4: WORD = 404;
pub const MM_MOTU_MXPMPU_MIDIOUT_4: WORD = 404;
pub const MM_MOTU_MXPMPU_MIDIIN_5: WORD = 405;
pub const MM_MOTU_MXPMPU_MIDIOUT_5: WORD = 405;
pub const MM_MOTU_MXPMPU_MIDIIN_6: WORD = 406;
pub const MM_MOTU_MXPMPU_MIDIOUT_6: WORD = 406;
pub const MM_MOTU_MXN_MIDIOUT_ALL: WORD = 500;
pub const MM_MOTU_MXN_MIDIIN_SYNC: WORD = 500;
pub const MM_MOTU_MXN_MIDIIN_1: WORD = 501;
pub const MM_MOTU_MXN_MIDIOUT_1: WORD = 501;
pub const MM_MOTU_MXN_MIDIIN_2: WORD = 502;
pub const MM_MOTU_MXN_MIDIOUT_2: WORD = 502;
pub const MM_MOTU_MXN_MIDIIN_3: WORD = 503;
pub const MM_MOTU_MXN_MIDIOUT_3: WORD = 503;
pub const MM_MOTU_MXN_MIDIIN_4: WORD = 504;
pub const MM_MOTU_MXN_MIDIOUT_4: WORD = 504;
pub const MM_MOTU_FLYER_MIDI_IN_SYNC: WORD = 600;
pub const MM_MOTU_FLYER_MIDI_IN_A: WORD = 601;
pub const MM_MOTU_FLYER_MIDI_OUT_A: WORD = 601;
pub const MM_MOTU_FLYER_MIDI_IN_B: WORD = 602;
pub const MM_MOTU_FLYER_MIDI_OUT_B: WORD = 602;
pub const MM_MOTU_PKX_MIDI_IN_SYNC: WORD = 700;
pub const MM_MOTU_PKX_MIDI_IN_A: WORD = 701;
pub const MM_MOTU_PKX_MIDI_OUT_A: WORD = 701;
pub const MM_MOTU_PKX_MIDI_IN_B: WORD = 702;
pub const MM_MOTU_PKX_MIDI_OUT_B: WORD = 702;
pub const MM_MOTU_DTX_MIDI_IN_SYNC: WORD = 800;
pub const MM_MOTU_DTX_MIDI_IN_A: WORD = 801;
pub const MM_MOTU_DTX_MIDI_OUT_A: WORD = 801;
pub const MM_MOTU_DTX_MIDI_IN_B: WORD = 802;
pub const MM_MOTU_DTX_MIDI_OUT_B: WORD = 802;
pub const MM_MOTU_MTPAV_MIDIOUT_ALL: WORD = 900;
pub const MM_MOTU_MTPAV_MIDIIN_SYNC: WORD = 900;
pub const MM_MOTU_MTPAV_MIDIIN_1: WORD = 901;
pub const MM_MOTU_MTPAV_MIDIOUT_1: WORD = 901;
pub const MM_MOTU_MTPAV_MIDIIN_2: WORD = 902;
pub const MM_MOTU_MTPAV_MIDIOUT_2: WORD = 902;
pub const MM_MOTU_MTPAV_MIDIIN_3: WORD = 903;
pub const MM_MOTU_MTPAV_MIDIOUT_3: WORD = 903;
pub const MM_MOTU_MTPAV_MIDIIN_4: WORD = 904;
pub const MM_MOTU_MTPAV_MIDIOUT_4: WORD = 904;
pub const MM_MOTU_MTPAV_MIDIIN_5: WORD = 905;
pub const MM_MOTU_MTPAV_MIDIOUT_5: WORD = 905;
pub const MM_MOTU_MTPAV_MIDIIN_6: WORD = 906;
pub const MM_MOTU_MTPAV_MIDIOUT_6: WORD = 906;
pub const MM_MOTU_MTPAV_MIDIIN_7: WORD = 907;
pub const MM_MOTU_MTPAV_MIDIOUT_7: WORD = 907;
pub const MM_MOTU_MTPAV_MIDIIN_8: WORD = 908;
pub const MM_MOTU_MTPAV_MIDIOUT_8: WORD = 908;
pub const MM_MOTU_MTPAV_NET_MIDIIN_1: WORD = 909;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_1: WORD = 909;
pub const MM_MOTU_MTPAV_NET_MIDIIN_2: WORD = 910;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_2: WORD = 910;
pub const MM_MOTU_MTPAV_NET_MIDIIN_3: WORD = 911;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_3: WORD = 911;
pub const MM_MOTU_MTPAV_NET_MIDIIN_4: WORD = 912;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_4: WORD = 912;
pub const MM_MOTU_MTPAV_NET_MIDIIN_5: WORD = 913;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_5: WORD = 913;
pub const MM_MOTU_MTPAV_NET_MIDIIN_6: WORD = 914;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_6: WORD = 914;
pub const MM_MOTU_MTPAV_NET_MIDIIN_7: WORD = 915;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_7: WORD = 915;
pub const MM_MOTU_MTPAV_NET_MIDIIN_8: WORD = 916;
pub const MM_MOTU_MTPAV_NET_MIDIOUT_8: WORD = 916;
pub const MM_MOTU_MTPAV_MIDIIN_ADAT: WORD = 917;
pub const MM_MOTU_MTPAV_MIDIOUT_ADAT: WORD = 917;
pub const MM_MOTU_MXPXT_MIDIIN_SYNC: WORD = 1000;
pub const MM_MOTU_MXPXT_MIDIOUT_ALL: WORD = 1000;
pub const MM_MOTU_MXPXT_MIDIIN_1: WORD = 1001;
pub const MM_MOTU_MXPXT_MIDIOUT_1: WORD = 1001;
pub const MM_MOTU_MXPXT_MIDIOUT_2: WORD = 1002;
pub const MM_MOTU_MXPXT_MIDIIN_2: WORD = 1002;
pub const MM_MOTU_MXPXT_MIDIIN_3: WORD = 1003;
pub const MM_MOTU_MXPXT_MIDIOUT_3: WORD = 1003;
pub const MM_MOTU_MXPXT_MIDIIN_4: WORD = 1004;
pub const MM_MOTU_MXPXT_MIDIOUT_4: WORD = 1004;
pub const MM_MOTU_MXPXT_MIDIIN_5: WORD = 1005;
pub const MM_MOTU_MXPXT_MIDIOUT_5: WORD = 1005;
pub const MM_MOTU_MXPXT_MIDIOUT_6: WORD = 1006;
pub const MM_MOTU_MXPXT_MIDIIN_6: WORD = 1006;
pub const MM_MOTU_MXPXT_MIDIOUT_7: WORD = 1007;
pub const MM_MOTU_MXPXT_MIDIIN_7: WORD = 1007;
pub const MM_MOTU_MXPXT_MIDIOUT_8: WORD = 1008;
pub const MM_MOTU_MXPXT_MIDIIN_8: WORD = 1008;
pub const MM_WORKBIT_MIXER: WORD = 1;
pub const MM_WORKBIT_WAVEOUT: WORD = 2;
pub const MM_WORKBIT_WAVEIN: WORD = 3;
pub const MM_WORKBIT_MIDIIN: WORD = 4;
pub const MM_WORKBIT_MIDIOUT: WORD = 5;
pub const MM_WORKBIT_FMSYNTH: WORD = 6;
pub const MM_WORKBIT_AUX: WORD = 7;
pub const MM_WORKBIT_JOYSTICK: WORD = 8;
pub const MM_OSITECH_TRUMPCARD: WORD = 1;
pub const MM_MIRO_MOVIEPRO: WORD = 1;
pub const MM_MIRO_VIDEOD1: WORD = 2;
pub const MM_MIRO_VIDEODC1TV: WORD = 3;
pub const MM_MIRO_VIDEOTD: WORD = 4;
pub const MM_MIRO_DC30_WAVEOUT: WORD = 5;
pub const MM_MIRO_DC30_WAVEIN: WORD = 6;
pub const MM_MIRO_DC30_MIX: WORD = 7;
pub const MM_ISOLUTION_PASCAL: WORD = 1;
pub const MM_VOICEMIXER: WORD = 1;
pub const ROCKWELL_WA1_WAVEIN: WORD = 100;
pub const ROCKWELL_WA1_WAVEOUT: WORD = 101;
pub const ROCKWELL_WA1_SYNTH: WORD = 102;
pub const ROCKWELL_WA1_MIXER: WORD = 103;
pub const ROCKWELL_WA1_MPU401_IN: WORD = 104;
pub const ROCKWELL_WA1_MPU401_OUT: WORD = 105;
pub const ROCKWELL_WA2_WAVEIN: WORD = 200;
pub const ROCKWELL_WA2_WAVEOUT: WORD = 201;
pub const ROCKWELL_WA2_SYNTH: WORD = 202;
pub const ROCKWELL_WA2_MIXER: WORD = 203;
pub const ROCKWELL_WA2_MPU401_IN: WORD = 204;
pub const ROCKWELL_WA2_MPU401_OUT: WORD = 205;
pub const MM_VOXWARE_CODEC: WORD = 1;
pub const MM_NORTEL_MPXAC_WAVEIN: WORD = 1;
pub const MM_NORTEL_MPXAC_WAVEOUT: WORD = 2;
pub const MM_ADDX_PCTV_DIGITALMIX: WORD = 1;
pub const MM_ADDX_PCTV_WAVEIN: WORD = 2;
pub const MM_ADDX_PCTV_WAVEOUT: WORD = 3;
pub const MM_ADDX_PCTV_MIXER: WORD = 4;
pub const MM_ADDX_PCTV_AUX_CD: WORD = 5;
pub const MM_ADDX_PCTV_AUX_LINE: WORD = 6;
pub const MM_WILDCAT_AUTOSCOREMIDIIN: WORD = 1;
pub const MM_RHETOREX_WAVEIN: WORD = 1;
pub const MM_RHETOREX_WAVEOUT: WORD = 2;
pub const MM_BTV_WAVEIN: WORD = 1;
pub const MM_BTV_WAVEOUT: WORD = 2;
pub const MM_BTV_MIDIIN: WORD = 3;
pub const MM_BTV_MIDIOUT: WORD = 4;
pub const MM_BTV_MIDISYNTH: WORD = 5;
pub const MM_BTV_AUX_LINE: WORD = 6;
pub const MM_BTV_AUX_MIC: WORD = 7;
pub const MM_BTV_AUX_CD: WORD = 8;
pub const MM_BTV_DIGITALIN: WORD = 9;
pub const MM_BTV_DIGITALOUT: WORD = 10;
pub const MM_BTV_MIDIWAVESTREAM: WORD = 11;
pub const MM_BTV_MIXER: WORD = 12;
pub const MM_ENSONIQ_SOUNDSCAPE: WORD = 0x10;
pub const MM_SOUNDSCAPE_WAVEOUT: WORD = MM_ENSONIQ_SOUNDSCAPE + 1;
pub const MM_SOUNDSCAPE_WAVEOUT_AUX: WORD = MM_ENSONIQ_SOUNDSCAPE + 2;
pub const MM_SOUNDSCAPE_WAVEIN: WORD = MM_ENSONIQ_SOUNDSCAPE + 3;
pub const MM_SOUNDSCAPE_MIDIOUT: WORD = MM_ENSONIQ_SOUNDSCAPE + 4;
pub const MM_SOUNDSCAPE_MIDIIN: WORD = MM_ENSONIQ_SOUNDSCAPE + 5;
pub const MM_SOUNDSCAPE_SYNTH: WORD = MM_ENSONIQ_SOUNDSCAPE + 6;
pub const MM_SOUNDSCAPE_MIXER: WORD = MM_ENSONIQ_SOUNDSCAPE + 7;
pub const MM_SOUNDSCAPE_AUX: WORD = MM_ENSONIQ_SOUNDSCAPE + 8;
pub const MM_NVIDIA_WAVEOUT: WORD = 1;
pub const MM_NVIDIA_WAVEIN: WORD = 2;
pub const MM_NVIDIA_MIDIOUT: WORD = 3;
pub const MM_NVIDIA_MIDIIN: WORD = 4;
pub const MM_NVIDIA_GAMEPORT: WORD = 5;
pub const MM_NVIDIA_MIXER: WORD = 6;
pub const MM_NVIDIA_AUX: WORD = 7;
pub const MM_OKSORI_BASE: WORD = 0;
pub const MM_OKSORI_OSR8_WAVEOUT: WORD = MM_OKSORI_BASE + 1;
pub const MM_OKSORI_OSR8_WAVEIN: WORD = MM_OKSORI_BASE + 2;
pub const MM_OKSORI_OSR16_WAVEOUT: WORD = MM_OKSORI_BASE + 3;
pub const MM_OKSORI_OSR16_WAVEIN: WORD = MM_OKSORI_BASE + 4;
pub const MM_OKSORI_FM_OPL4: WORD = MM_OKSORI_BASE + 5;
pub const MM_OKSORI_MIX_MASTER: WORD = MM_OKSORI_BASE + 6;
pub const MM_OKSORI_MIX_WAVE: WORD = MM_OKSORI_BASE + 7;
pub const MM_OKSORI_MIX_FM: WORD = MM_OKSORI_BASE + 8;
pub const MM_OKSORI_MIX_LINE: WORD = MM_OKSORI_BASE + 9;
pub const MM_OKSORI_MIX_CD: WORD = MM_OKSORI_BASE + 10;
pub const MM_OKSORI_MIX_MIC: WORD = MM_OKSORI_BASE + 11;
pub const MM_OKSORI_MIX_ECHO: WORD = MM_OKSORI_BASE + 12;
pub const MM_OKSORI_MIX_AUX1: WORD = MM_OKSORI_BASE + 13;
pub const MM_OKSORI_MIX_LINE1: WORD = MM_OKSORI_BASE + 14;
pub const MM_OKSORI_EXT_MIC1: WORD = MM_OKSORI_BASE + 15;
pub const MM_OKSORI_EXT_MIC2: WORD = MM_OKSORI_BASE + 16;
pub const MM_OKSORI_MIDIOUT: WORD = MM_OKSORI_BASE + 17;
pub const MM_OKSORI_MIDIIN: WORD = MM_OKSORI_BASE + 18;
pub const MM_OKSORI_MPEG_CDVISION: WORD = MM_OKSORI_BASE + 19;
pub const MM_DIACOUSTICS_DRUM_ACTION: WORD = 1;
pub const MM_KAY_ELEMETRICS_CSL: WORD = 0x4300;
pub const MM_KAY_ELEMETRICS_CSL_DAT: WORD = 0x4308;
pub const MM_KAY_ELEMETRICS_CSL_4CHANNEL: WORD = 0x4309;
pub const MM_CRYSTAL_CS4232_WAVEIN: WORD = 1;
pub const MM_CRYSTAL_CS4232_WAVEOUT: WORD = 2;
pub const MM_CRYSTAL_CS4232_WAVEMIXER: WORD = 3;
pub const MM_CRYSTAL_CS4232_WAVEAUX_AUX1: WORD = 4;
pub const MM_CRYSTAL_CS4232_WAVEAUX_AUX2: WORD = 5;
pub const MM_CRYSTAL_CS4232_WAVEAUX_LINE: WORD = 6;
pub const MM_CRYSTAL_CS4232_WAVEAUX_MONO: WORD = 7;
pub const MM_CRYSTAL_CS4232_WAVEAUX_MASTER: WORD = 8;
pub const MM_CRYSTAL_CS4232_MIDIIN: WORD = 9;
pub const MM_CRYSTAL_CS4232_MIDIOUT: WORD = 10;
pub const MM_CRYSTAL_CS4232_INPUTGAIN_AUX1: WORD = 13;
pub const MM_CRYSTAL_CS4232_INPUTGAIN_LOOP: WORD = 14;
pub const MM_CRYSTAL_SOUND_FUSION_WAVEIN: WORD = 21;
pub const MM_CRYSTAL_SOUND_FUSION_WAVEOUT: WORD = 22;
pub const MM_CRYSTAL_SOUND_FUSION_MIXER: WORD = 23;
pub const MM_CRYSTAL_SOUND_FUSION_MIDIIN: WORD = 24;
pub const MM_CRYSTAL_SOUND_FUSION_MIDIOUT: WORD = 25;
pub const MM_CRYSTAL_SOUND_FUSION_JOYSTICK: WORD = 26;
pub const MM_QUARTERDECK_LHWAVEIN: WORD = 0;
pub const MM_QUARTERDECK_LHWAVEOUT: WORD = 1;
pub const MM_TDK_MW_MIDI_SYNTH: WORD = 1;
pub const MM_TDK_MW_MIDI_IN: WORD = 2;
pub const MM_TDK_MW_MIDI_OUT: WORD = 3;
pub const MM_TDK_MW_WAVE_IN: WORD = 4;
pub const MM_TDK_MW_WAVE_OUT: WORD = 5;
pub const MM_TDK_MW_AUX: WORD = 6;
pub const MM_TDK_MW_MIXER: WORD = 10;
pub const MM_TDK_MW_AUX_MASTER: WORD = 100;
pub const MM_TDK_MW_AUX_BASS: WORD = 101;
pub const MM_TDK_MW_AUX_TREBLE: WORD = 102;
pub const MM_TDK_MW_AUX_MIDI_VOL: WORD = 103;
pub const MM_TDK_MW_AUX_WAVE_VOL: WORD = 104;
pub const MM_TDK_MW_AUX_WAVE_RVB: WORD = 105;
pub const MM_TDK_MW_AUX_WAVE_CHR: WORD = 106;
pub const MM_TDK_MW_AUX_VOL: WORD = 107;
pub const MM_TDK_MW_AUX_RVB: WORD = 108;
pub const MM_TDK_MW_AUX_CHR: WORD = 109;
pub const MM_DIGITAL_AUDIO_LABS_TC: WORD = 0x01;
pub const MM_DIGITAL_AUDIO_LABS_DOC: WORD = 0x02;
pub const MM_DIGITAL_AUDIO_LABS_V8: WORD = 0x10;
pub const MM_DIGITAL_AUDIO_LABS_CPRO: WORD = 0x11;
pub const MM_DIGITAL_AUDIO_LABS_VP: WORD = 0x12;
pub const MM_DIGITAL_AUDIO_LABS_CDLX: WORD = 0x13;
pub const MM_DIGITAL_AUDIO_LABS_CTDIF: WORD = 0x14;
pub const MM_SEERSYS_SEERSYNTH: WORD = 1;
pub const MM_SEERSYS_SEERWAVE: WORD = 2;
pub const MM_SEERSYS_SEERMIX: WORD = 3;
pub const MM_SEERSYS_WAVESYNTH: WORD = 4;
pub const MM_SEERSYS_WAVESYNTH_WG: WORD = 5;
pub const MM_SEERSYS_REALITY: WORD = 6;
pub const MM_OSPREY_1000WAVEIN: WORD = 1;
pub const MM_OSPREY_1000WAVEOUT: WORD = 2;
pub const MM_SOUNDESIGNS_WAVEIN: WORD = 1;
pub const MM_SOUNDESIGNS_WAVEOUT: WORD = 2;
pub const MM_SSP_SNDFESWAVEIN: WORD = 1;
pub const MM_SSP_SNDFESWAVEOUT: WORD = 2;
pub const MM_SSP_SNDFESMIDIIN: WORD = 3;
pub const MM_SSP_SNDFESMIDIOUT: WORD = 4;
pub const MM_SSP_SNDFESSYNTH: WORD = 5;
pub const MM_SSP_SNDFESMIX: WORD = 6;
pub const MM_SSP_SNDFESAUX: WORD = 7;
pub const MM_ECS_AADF_MIDI_IN: WORD = 10;
pub const MM_ECS_AADF_MIDI_OUT: WORD = 11;
pub const MM_ECS_AADF_WAVE2MIDI_IN: WORD = 12;
pub const MM_AMD_INTERWAVE_WAVEIN: WORD = 1;
pub const MM_AMD_INTERWAVE_WAVEOUT: WORD = 2;
pub const MM_AMD_INTERWAVE_SYNTH: WORD = 3;
pub const MM_AMD_INTERWAVE_MIXER1: WORD = 4;
pub const MM_AMD_INTERWAVE_MIXER2: WORD = 5;
pub const MM_AMD_INTERWAVE_JOYSTICK: WORD = 6;
pub const MM_AMD_INTERWAVE_EX_CD: WORD = 7;
pub const MM_AMD_INTERWAVE_MIDIIN: WORD = 8;
pub const MM_AMD_INTERWAVE_MIDIOUT: WORD = 9;
pub const MM_AMD_INTERWAVE_AUX1: WORD = 10;
pub const MM_AMD_INTERWAVE_AUX2: WORD = 11;
pub const MM_AMD_INTERWAVE_AUX_MIC: WORD = 12;
pub const MM_AMD_INTERWAVE_AUX_CD: WORD = 13;
pub const MM_AMD_INTERWAVE_MONO_IN: WORD = 14;
pub const MM_AMD_INTERWAVE_MONO_OUT: WORD = 15;
pub const MM_AMD_INTERWAVE_EX_TELEPHONY: WORD = 16;
pub const MM_AMD_INTERWAVE_WAVEOUT_BASE: WORD = 17;
pub const MM_AMD_INTERWAVE_WAVEOUT_TREBLE: WORD = 18;
pub const MM_AMD_INTERWAVE_STEREO_ENHANCED: WORD = 19;
pub const MM_COREDYNAMICS_DYNAMIXHR: WORD = 1;
pub const MM_COREDYNAMICS_DYNASONIX_SYNTH: WORD = 2;
pub const MM_COREDYNAMICS_DYNASONIX_MIDI_IN: WORD = 3;
pub const MM_COREDYNAMICS_DYNASONIX_MIDI_OUT: WORD = 4;
pub const MM_COREDYNAMICS_DYNASONIX_WAVE_IN: WORD = 5;
pub const MM_COREDYNAMICS_DYNASONIX_WAVE_OUT: WORD = 6;
pub const MM_COREDYNAMICS_DYNASONIX_AUDIO_IN: WORD = 7;
pub const MM_COREDYNAMICS_DYNASONIX_AUDIO_OUT: WORD = 8;
pub const MM_COREDYNAMICS_DYNAGRAFX_VGA: WORD = 9;
pub const MM_COREDYNAMICS_DYNAGRAFX_WAVE_IN: WORD = 10;
pub const MM_COREDYNAMICS_DYNAGRAFX_WAVE_OUT: WORD = 11;
pub const MM_CANAM_CBXWAVEOUT: WORD = 1;
pub const MM_CANAM_CBXWAVEIN: WORD = 2;
pub const MM_SOFTSOUND_CODEC: WORD = 1;
pub const MM_NORRIS_VOICELINK: WORD = 1;
pub const MM_DDD_MIDILINK_MIDIIN: WORD = 1;
pub const MM_DDD_MIDILINK_MIDIOUT: WORD = 2;
pub const MM_EUPHONICS_AUX_CD: WORD = 1;
pub const MM_EUPHONICS_AUX_LINE: WORD = 2;
pub const MM_EUPHONICS_AUX_MASTER: WORD = 3;
pub const MM_EUPHONICS_AUX_MIC: WORD = 4;
pub const MM_EUPHONICS_AUX_MIDI: WORD = 5;
pub const MM_EUPHONICS_AUX_WAVE: WORD = 6;
pub const MM_EUPHONICS_FMSYNTH_MONO: WORD = 7;
pub const MM_EUPHONICS_FMSYNTH_STEREO: WORD = 8;
pub const MM_EUPHONICS_MIDIIN: WORD = 9;
pub const MM_EUPHONICS_MIDIOUT: WORD = 10;
pub const MM_EUPHONICS_MIXER: WORD = 11;
pub const MM_EUPHONICS_WAVEIN: WORD = 12;
pub const MM_EUPHONICS_WAVEOUT: WORD = 13;
pub const MM_EUPHONICS_EUSYNTH: WORD = 14;
pub const CRYSTAL_NET_SFM_CODEC: WORD = 1;
pub const MM_CHROMATIC_M1: WORD = 0x0001;
pub const MM_CHROMATIC_M1_WAVEIN: WORD = 0x0002;
pub const MM_CHROMATIC_M1_WAVEOUT: WORD = 0x0003;
pub const MM_CHROMATIC_M1_FMSYNTH: WORD = 0x0004;
pub const MM_CHROMATIC_M1_MIXER: WORD = 0x0005;
pub const MM_CHROMATIC_M1_AUX: WORD = 0x0006;
pub const MM_CHROMATIC_M1_AUX_CD: WORD = 0x0007;
pub const MM_CHROMATIC_M1_MIDIIN: WORD = 0x0008;
pub const MM_CHROMATIC_M1_MIDIOUT: WORD = 0x0009;
pub const MM_CHROMATIC_M1_WTSYNTH: WORD = 0x0010;
pub const MM_CHROMATIC_M1_MPEGWAVEIN: WORD = 0x0011;
pub const MM_CHROMATIC_M1_MPEGWAVEOUT: WORD = 0x0012;
pub const MM_CHROMATIC_M2: WORD = 0x0013;
pub const MM_CHROMATIC_M2_WAVEIN: WORD = 0x0014;
pub const MM_CHROMATIC_M2_WAVEOUT: WORD = 0x0015;
pub const MM_CHROMATIC_M2_FMSYNTH: WORD = 0x0016;
pub const MM_CHROMATIC_M2_MIXER: WORD = 0x0017;
pub const MM_CHROMATIC_M2_AUX: WORD = 0x0018;
pub const MM_CHROMATIC_M2_AUX_CD: WORD = 0x0019;
pub const MM_CHROMATIC_M2_MIDIIN: WORD = 0x0020;
pub const MM_CHROMATIC_M2_MIDIOUT: WORD = 0x0021;
pub const MM_CHROMATIC_M2_WTSYNTH: WORD = 0x0022;
pub const MM_CHROMATIC_M2_MPEGWAVEIN: WORD = 0x0023;
pub const MM_CHROMATIC_M2_MPEGWAVEOUT: WORD = 0x0024;
pub const MM_VIENNASYS_TSP_WAVE_DRIVER: WORD = 1;
pub const MM_CONNECTIX_VIDEC_CODEC: WORD = 1;
pub const MM_GADGETLABS_WAVE44_WAVEIN: WORD = 1;
pub const MM_GADGETLABS_WAVE44_WAVEOUT: WORD = 2;
pub const MM_GADGETLABS_WAVE42_WAVEIN: WORD = 3;
pub const MM_GADGETLABS_WAVE42_WAVEOUT: WORD = 4;
pub const MM_GADGETLABS_WAVE4_MIDIIN: WORD = 5;
pub const MM_GADGETLABS_WAVE4_MIDIOUT: WORD = 6;
pub const MM_FRONTIER_WAVECENTER_MIDIIN: WORD = 1;
pub const MM_FRONTIER_WAVECENTER_MIDIOUT: WORD = 2;
pub const MM_FRONTIER_WAVECENTER_WAVEIN: WORD = 3;
pub const MM_FRONTIER_WAVECENTER_WAVEOUT: WORD = 4;
pub const MM_VIONA_QVINPCI_MIXER: WORD = 1;
pub const MM_VIONA_QVINPCI_WAVEIN: WORD = 2;
pub const MM_VIONAQVINPCI_WAVEOUT: WORD = 3;
pub const MM_VIONA_BUSTER_MIXER: WORD = 4;
pub const MM_VIONA_CINEMASTER_MIXER: WORD = 5;
pub const MM_VIONA_CONCERTO_MIXER: WORD = 6;
pub const MM_CASIO_WP150_MIDIOUT: WORD = 1;
pub const MM_CASIO_WP150_MIDIIN: WORD = 2;
pub const MM_CASIO_LSG_MIDIOUT: WORD = 3;
pub const MM_DIMD_PLATFORM: WORD = 0;
pub const MM_DIMD_DIRSOUND: WORD = 1;
pub const MM_DIMD_VIRTMPU: WORD = 2;
pub const MM_DIMD_VIRTSB: WORD = 3;
pub const MM_DIMD_VIRTJOY: WORD = 4;
pub const MM_DIMD_WAVEIN: WORD = 5;
pub const MM_DIMD_WAVEOUT: WORD = 6;
pub const MM_DIMD_MIDIIN: WORD = 7;
pub const MM_DIMD_MIDIOUT: WORD = 8;
pub const MM_DIMD_AUX_LINE: WORD = 9;
pub const MM_DIMD_MIXER: WORD = 10;
pub const MM_DIMD_WSS_WAVEIN: WORD = 14;
pub const MM_DIMD_WSS_WAVEOUT: WORD = 15;
pub const MM_DIMD_WSS_MIXER: WORD = 17;
pub const MM_DIMD_WSS_AUX: WORD = 21;
pub const MM_DIMD_WSS_SYNTH: WORD = 76;
pub const MM_S3_WAVEOUT: WORD = 1;
pub const MM_S3_WAVEIN: WORD = 2;
pub const MM_S3_MIDIOUT: WORD = 3;
pub const MM_S3_MIDIIN: WORD = 4;
pub const MM_S3_FMSYNTH: WORD = 5;
pub const MM_S3_MIXER: WORD = 6;
pub const MM_S3_AUX: WORD = 7;
pub const MM_VKC_MPU401_MIDIIN: WORD = 0x0100;
pub const MM_VKC_SERIAL_MIDIIN: WORD = 0x0101;
pub const MM_VKC_MPU401_MIDIOUT: WORD = 0x0200;
pub const MM_VKC_SERIAL_MIDIOUT: WORD = 0x0201;
pub const MM_ZEFIRO_ZA2: WORD = 2;
pub const MM_FHGIIS_MPEGLAYER3_DECODE: WORD = 9;
pub const MM_FHGIIS_MPEGLAYER3: WORD = 10;
pub const MM_FHGIIS_MPEGLAYER3_LITE: WORD = 10;
pub const MM_FHGIIS_MPEGLAYER3_BASIC: WORD = 11;
pub const MM_FHGIIS_MPEGLAYER3_ADVANCED: WORD = 12;
pub const MM_FHGIIS_MPEGLAYER3_PROFESSIONAL: WORD = 13;
pub const MM_FHGIIS_MPEGLAYER3_ADVANCEDPLUS: WORD = 14;
pub const MM_QUICKNET_PJWAVEIN: WORD = 1;
pub const MM_QUICKNET_PJWAVEOUT: WORD = 2;
pub const MM_SICRESOURCE_SSO3D: WORD = 2;
pub const MM_SICRESOURCE_SSOW3DI: WORD = 3;
pub const MM_NEOMAGIC_SYNTH: WORD = 1;
pub const MM_NEOMAGIC_WAVEOUT: WORD = 2;
pub const MM_NEOMAGIC_WAVEIN: WORD = 3;
pub const MM_NEOMAGIC_MIDIOUT: WORD = 4;
pub const MM_NEOMAGIC_MIDIIN: WORD = 5;
pub const MM_NEOMAGIC_AUX: WORD = 6;
pub const MM_NEOMAGIC_MW3DX_WAVEOUT: WORD = 10;
pub const MM_NEOMAGIC_MW3DX_WAVEIN: WORD = 11;
pub const MM_NEOMAGIC_MW3DX_MIDIOUT: WORD = 12;
pub const MM_NEOMAGIC_MW3DX_MIDIIN: WORD = 13;
pub const MM_NEOMAGIC_MW3DX_FMSYNTH: WORD = 14;
pub const MM_NEOMAGIC_MW3DX_GMSYNTH: WORD = 15;
pub const MM_NEOMAGIC_MW3DX_MIXER: WORD = 16;
pub const MM_NEOMAGIC_MW3DX_AUX: WORD = 17;
pub const MM_NEOMAGIC_MWAVE_WAVEOUT: WORD = 20;
pub const MM_NEOMAGIC_MWAVE_WAVEIN: WORD = 21;
pub const MM_NEOMAGIC_MWAVE_MIDIOUT: WORD = 22;
pub const MM_NEOMAGIC_MWAVE_MIDIIN: WORD = 23;
pub const MM_NEOMAGIC_MWAVE_MIXER: WORD = 24;
pub const MM_NEOMAGIC_MWAVE_AUX: WORD = 25;
pub const MM_MERGING_MPEGL3: WORD = 1;
pub const MM_XIRLINK_VISIONLINK: WORD = 1;
pub const MM_OTI_611WAVEIN: WORD = 5;
pub const MM_OTI_611WAVEOUT: WORD = 6;
pub const MM_OTI_611MIXER: WORD = 7;
pub const MM_OTI_611MIDIN: WORD = 0x12;
pub const MM_OTI_611MIDIOUT: WORD = 0x13;
pub const MM_AUREAL_AU8820: WORD = 16;
pub const MM_AU8820_SYNTH: WORD = 17;
pub const MM_AU8820_WAVEOUT: WORD = 18;
pub const MM_AU8820_WAVEIN: WORD = 19;
pub const MM_AU8820_MIXER: WORD = 20;
pub const MM_AU8820_AUX: WORD = 21;
pub const MM_AU8820_MIDIOUT: WORD = 22;
pub const MM_AU8820_MIDIIN: WORD = 23;
pub const MM_AUREAL_AU8830: WORD = 32;
pub const MM_AU8830_SYNTH: WORD = 33;
pub const MM_AU8830_WAVEOUT: WORD = 34;
pub const MM_AU8830_WAVEIN: WORD = 35;
pub const MM_AU8830_MIXER: WORD = 36;
pub const MM_AU8830_AUX: WORD = 37;
pub const MM_AU8830_MIDIOUT: WORD = 38;
pub const MM_AU8830_MIDIIN: WORD = 39;
pub const MM_VIVO_AUDIO_CODEC: WORD = 1;
pub const MM_SHARP_MDC_MIDI_SYNTH: WORD = 1;
pub const MM_SHARP_MDC_MIDI_IN: WORD = 2;
pub const MM_SHARP_MDC_MIDI_OUT: WORD = 3;
pub const MM_SHARP_MDC_WAVE_IN: WORD = 4;
pub const MM_SHARP_MDC_WAVE_OUT: WORD = 5;
pub const MM_SHARP_MDC_AUX: WORD = 6;
pub const MM_SHARP_MDC_MIXER: WORD = 10;
pub const MM_SHARP_MDC_AUX_MASTER: WORD = 100;
pub const MM_SHARP_MDC_AUX_BASS: WORD = 101;
pub const MM_SHARP_MDC_AUX_TREBLE: WORD = 102;
pub const MM_SHARP_MDC_AUX_MIDI_VOL: WORD = 103;
pub const MM_SHARP_MDC_AUX_WAVE_VOL: WORD = 104;
pub const MM_SHARP_MDC_AUX_WAVE_RVB: WORD = 105;
pub const MM_SHARP_MDC_AUX_WAVE_CHR: WORD = 106;
pub const MM_SHARP_MDC_AUX_VOL: WORD = 107;
pub const MM_SHARP_MDC_AUX_RVB: WORD = 108;
pub const MM_SHARP_MDC_AUX_CHR: WORD = 109;
pub const MM_LUCENT_ACM_G723: WORD = 0;
pub const MM_ATT_G729A: WORD = 1;
pub const MM_MARIAN_ARC44WAVEIN: WORD = 1;
pub const MM_MARIAN_ARC44WAVEOUT: WORD = 2;
pub const MM_MARIAN_PRODIF24WAVEIN: WORD = 3;
pub const MM_MARIAN_PRODIF24WAVEOUT: WORD = 4;
pub const MM_MARIAN_ARC88WAVEIN: WORD = 5;
pub const MM_MARIAN_ARC88WAVEOUT: WORD = 6;
pub const MM_BCB_NETBOARD_10: WORD = 1;
pub const MM_BCB_TT75_10: WORD = 2;
pub const MM_MOTIONPIXELS_MVI2: WORD = 1;
pub const MM_QDESIGN_ACM_MPEG: WORD = 1;
pub const MM_QDESIGN_ACM_QDESIGN_MUSIC: WORD = 2;
pub const MM_NMP_CCP_WAVEIN: WORD = 1;
pub const MM_NMP_CCP_WAVEOUT: WORD = 2;
pub const MM_NMP_ACM_AMR: WORD = 10;
pub const MM_DF_ACM_G726: WORD = 1;
pub const MM_DF_ACM_GSM610: WORD = 2;
pub const MM_BERCOS_WAVEIN: WORD = 1;
pub const MM_BERCOS_MIXER: WORD = 2;
pub const MM_BERCOS_WAVEOUT: WORD = 3;
pub const MM_ONLIVE_MPCODEC: WORD = 1;
pub const MM_PHONET_PP_WAVEOUT: WORD = 1;
pub const MM_PHONET_PP_WAVEIN: WORD = 2;
pub const MM_PHONET_PP_MIXER: WORD = 3;
pub const MM_FTR_ENCODER_WAVEIN: WORD = 1;
pub const MM_FTR_ACM: WORD = 2;
pub const MM_ENET_T2000_LINEIN: WORD = 1;
pub const MM_ENET_T2000_LINEOUT: WORD = 2;
pub const MM_ENET_T2000_HANDSETIN: WORD = 3;
pub const MM_ENET_T2000_HANDSETOUT: WORD = 4;
pub const MM_EMAGIC_UNITOR8: WORD = 1;
pub const MM_SIPROLAB_ACELPNET: WORD = 1;
pub const MM_DICTAPHONE_G726: WORD = 1;
pub const MM_RZS_ACM_TUBGSM: WORD = 1;
pub const MM_EES_PCMIDI14: WORD = 1;
pub const MM_EES_PCMIDI14_IN: WORD = 2;
pub const MM_EES_PCMIDI14_OUT1: WORD = 3;
pub const MM_EES_PCMIDI14_OUT2: WORD = 4;
pub const MM_EES_PCMIDI14_OUT3: WORD = 5;
pub const MM_EES_PCMIDI14_OUT4: WORD = 6;
pub const MM_HAFTMANN_LPTDAC2: WORD = 1;
pub const MM_LUCID_PCI24WAVEIN: WORD = 1;
pub const MM_LUCID_PCI24WAVEOUT: WORD = 2;
pub const MM_HEADSPACE_HAESYNTH: WORD = 1;
pub const MM_HEADSPACE_HAEWAVEOUT: WORD = 2;
pub const MM_HEADSPACE_HAEWAVEIN: WORD = 3;
pub const MM_HEADSPACE_HAEMIXER: WORD = 4;
pub const MM_UNISYS_ACM_NAP: WORD = 1;
pub const MM_LUMINOSITI_SCWAVEIN: WORD = 1;
pub const MM_LUMINOSITI_SCWAVEOUT: WORD = 2;
pub const MM_LUMINOSITI_SCWAVEMIX: WORD = 3;
pub const MM_ACTIVEVOICE_ACM_VOXADPCM: WORD = 1;
pub const MM_DTS_DS: WORD = 1;
pub const MM_SOFTLAB_NSK_FRW_WAVEIN: WORD = 1;
pub const MM_SOFTLAB_NSK_FRW_WAVEOUT: WORD = 2;
pub const MM_SOFTLAB_NSK_FRW_MIXER: WORD = 3;
pub const MM_SOFTLAB_NSK_FRW_AUX: WORD = 4;
pub const MM_FORTEMEDIA_WAVEIN: WORD = 1;
pub const MM_FORTEMEDIA_WAVEOUT: WORD = 2;
pub const MM_FORTEMEDIA_FMSYNC: WORD = 3;
pub const MM_FORTEMEDIA_MIXER: WORD = 4;
pub const MM_FORTEMEDIA_AUX: WORD = 5;
pub const MM_SONORUS_STUDIO: WORD = 1;
pub const MM_I_LINK_VOICE_CODER: WORD = 1;
pub const MM_SELSIUS_SYSTEMS_RTPWAVEOUT: WORD = 1;
pub const MM_SELSIUS_SYSTEMS_RTPWAVEIN: WORD = 2;
pub const MM_ADMOS_FM_SYNTH: WORD = 1;
pub const MM_ADMOS_QS3AMIDIOUT: WORD = 2;
pub const MM_ADMOS_QS3AMIDIIN: WORD = 3;
pub const MM_ADMOS_QS3AWAVEOUT: WORD = 4;
pub const MM_ADMOS_QS3AWAVEIN: WORD = 5;
pub const MM_LEXICON_STUDIO_WAVE_OUT: WORD = 1;
pub const MM_LEXICON_STUDIO_WAVE_IN: WORD = 2;
pub const MM_SGI_320_WAVEIN: WORD = 1;
pub const MM_SGI_320_WAVEOUT: WORD = 2;
pub const MM_SGI_320_MIXER: WORD = 3;
pub const MM_SGI_540_WAVEIN: WORD = 4;
pub const MM_SGI_540_WAVEOUT: WORD = 5;
pub const MM_SGI_540_MIXER: WORD = 6;
pub const MM_SGI_RAD_ADATMONO1_WAVEIN: WORD = 7;
pub const MM_SGI_RAD_ADATMONO2_WAVEIN: WORD = 8;
pub const MM_SGI_RAD_ADATMONO3_WAVEIN: WORD = 9;
pub const MM_SGI_RAD_ADATMONO4_WAVEIN: WORD = 10;
pub const MM_SGI_RAD_ADATMONO5_WAVEIN: WORD = 11;
pub const MM_SGI_RAD_ADATMONO6_WAVEIN: WORD = 12;
pub const MM_SGI_RAD_ADATMONO7_WAVEIN: WORD = 13;
pub const MM_SGI_RAD_ADATMONO8_WAVEIN: WORD = 14;
pub const MM_SGI_RAD_ADATSTEREO12_WAVEIN: WORD = 15;
pub const MM_SGI_RAD_ADATSTEREO34_WAVEIN: WORD = 16;
pub const MM_SGI_RAD_ADATSTEREO56_WAVEIN: WORD = 17;
pub const MM_SGI_RAD_ADATSTEREO78_WAVEIN: WORD = 18;
pub const MM_SGI_RAD_ADAT8CHAN_WAVEIN: WORD = 19;
pub const MM_SGI_RAD_ADATMONO1_WAVEOUT: WORD = 20;
pub const MM_SGI_RAD_ADATMONO2_WAVEOUT: WORD = 21;
pub const MM_SGI_RAD_ADATMONO3_WAVEOUT: WORD = 22;
pub const MM_SGI_RAD_ADATMONO4_WAVEOUT: WORD = 23;
pub const MM_SGI_RAD_ADATMONO5_WAVEOUT: WORD = 24;
pub const MM_SGI_RAD_ADATMONO6_WAVEOUT: WORD = 25;
pub const MM_SGI_RAD_ADATMONO7_WAVEOUT: WORD = 26;
pub const MM_SGI_RAD_ADATMONO8_WAVEOUT: WORD = 27;
pub const MM_SGI_RAD_ADATSTEREO12_WAVEOUT: WORD = 28;
pub const MM_SGI_RAD_ADATSTEREO32_WAVEOUT: WORD = 29;
pub const MM_SGI_RAD_ADATSTEREO56_WAVEOUT: WORD = 30;
pub const MM_SGI_RAD_ADATSTEREO78_WAVEOUT: WORD = 31;
pub const MM_SGI_RAD_ADAT8CHAN_WAVEOUT: WORD = 32;
pub const MM_SGI_RAD_AESMONO1_WAVEIN: WORD = 33;
pub const MM_SGI_RAD_AESMONO2_WAVEIN: WORD = 34;
pub const MM_SGI_RAD_AESSTEREO_WAVEIN: WORD = 35;
pub const MM_SGI_RAD_AESMONO1_WAVEOUT: WORD = 36;
pub const MM_SGI_RAD_AESMONO2_WAVEOUT: WORD = 37;
pub const MM_SGI_RAD_AESSTEREO_WAVEOUT: WORD = 38;
pub const MM_IPI_ACM_HSX: WORD = 1;
pub const MM_IPI_ACM_RPELP: WORD = 2;
pub const MM_IPI_WF_ASSS: WORD = 3;
pub const MM_IPI_AT_WAVEOUT: WORD = 4;
pub const MM_IPI_AT_WAVEIN: WORD = 5;
pub const MM_IPI_AT_MIXER: WORD = 6;
pub const MM_ICE_WAVEOUT: WORD = 1;
pub const MM_ICE_WAVEIN: WORD = 2;
pub const MM_ICE_MTWAVEOUT: WORD = 3;
pub const MM_ICE_MTWAVEIN: WORD = 4;
pub const MM_ICE_MIDIOUT1: WORD = 5;
pub const MM_ICE_MIDIIN1: WORD = 6;
pub const MM_ICE_MIDIOUT2: WORD = 7;
pub const MM_ICE_MIDIIN2: WORD = 8;
pub const MM_ICE_SYNTH: WORD = 9;
pub const MM_ICE_MIXER: WORD = 10;
pub const MM_ICE_AUX: WORD = 11;
pub const MM_VQST_VQC1: WORD = 1;
pub const MM_VQST_VQC2: WORD = 2;
pub const MM_ETEK_KWIKMIDI_MIDIIN: WORD = 1;
pub const MM_ETEK_KWIKMIDI_MIDIOUT: WORD = 2;
pub const MM_INTERNET_SSW_MIDIOUT: WORD = 10;
pub const MM_INTERNET_SSW_MIDIIN: WORD = 11;
pub const MM_INTERNET_SSW_WAVEOUT: WORD = 12;
pub const MM_INTERNET_SSW_WAVEIN: WORD = 13;
pub const MM_SONY_ACM_SCX: WORD = 1;
pub const MM_UH_ACM_ADPCM: WORD = 1;
pub const MM_SYDEC_NV_WAVEIN: WORD = 1;
pub const MM_SYDEC_NV_WAVEOUT: WORD = 2;
pub const MM_FLEXION_X300_WAVEIN: WORD = 1;
pub const MM_FLEXION_X300_WAVEOUT: WORD = 2;
pub const MM_VIA_WAVEOUT: WORD = 1;
pub const MM_VIA_WAVEIN: WORD = 2;
pub const MM_VIA_MIXER: WORD = 3;
pub const MM_VIA_AUX: WORD = 4;
pub const MM_VIA_MPU401_MIDIOUT: WORD = 5;
pub const MM_VIA_MPU401_MIDIIN: WORD = 6;
pub const MM_VIA_SWFM_SYNTH: WORD = 7;
pub const MM_VIA_WDM_WAVEOUT: WORD = 8;
pub const MM_VIA_WDM_WAVEIN: WORD = 9;
pub const MM_VIA_WDM_MIXER: WORD = 10;
pub const MM_VIA_WDM_MPU401_MIDIOUT: WORD = 11;
pub const MM_VIA_WDM_MPU401_MIDIIN: WORD = 12;
pub const MM_MICRONAS_SC4: WORD = 1;
pub const MM_MICRONAS_CLP833: WORD = 2;
pub const MM_HP_WAVEOUT: WORD = 1;
pub const MM_HP_WAVEIN: WORD = 2;
pub const MM_QUICKAUDIO_MINIMIDI: WORD = 1;
pub const MM_QUICKAUDIO_MAXIMIDI: WORD = 2;
pub const MM_ICCC_UNA3_WAVEIN: WORD = 1;
pub const MM_ICCC_UNA3_WAVEOUT: WORD = 2;
pub const MM_ICCC_UNA3_AUX: WORD = 3;
pub const MM_ICCC_UNA3_MIXER: WORD = 4;
pub const MM_3COM_CB_MIXER: WORD = 1;
pub const MM_3COM_CB_WAVEIN: WORD = 2;
pub const MM_3COM_CB_WAVEOUT: WORD = 3;
pub const MM_MINDMAKER_GC_WAVEIN: WORD = 1;
pub const MM_MINDMAKER_GC_WAVEOUT: WORD = 2;
pub const MM_MINDMAKER_GC_MIXER: WORD = 3;
pub const MM_TELEKOL_WAVEOUT: WORD = 1;
pub const MM_TELEKOL_WAVEIN: WORD = 2;
pub const MM_ALGOVISION_VB80WAVEOUT: WORD = 1;
pub const MM_ALGOVISION_VB80WAVEIN: WORD = 2;
pub const MM_ALGOVISION_VB80MIXER: WORD = 3;
pub const MM_ALGOVISION_VB80AUX: WORD = 4;
pub const MM_ALGOVISION_VB80AUX2: WORD = 5;
pub const RIFFINFO_IARL: DWORD = MAKEFOURCC!('I', 'A', 'R', 'L');
pub const RIFFINFO_IART: DWORD = MAKEFOURCC!('I', 'A', 'R', 'T');
pub const RIFFINFO_ICMS: DWORD = MAKEFOURCC!('I', 'C', 'M', 'S');
pub const RIFFINFO_ICMT: DWORD = MAKEFOURCC!('I', 'C', 'M', 'T');
pub const RIFFINFO_ICOP: DWORD = MAKEFOURCC!('I', 'C', 'O', 'P');
pub const RIFFINFO_ICRD: DWORD = MAKEFOURCC!('I', 'C', 'R', 'D');
pub const RIFFINFO_ICRP: DWORD = MAKEFOURCC!('I', 'C', 'R', 'P');
pub const RIFFINFO_IDIM: DWORD = MAKEFOURCC!('I', 'D', 'I', 'M');
pub const RIFFINFO_IDPI: DWORD = MAKEFOURCC!('I', 'D', 'P', 'I');
pub const RIFFINFO_IENG: DWORD = MAKEFOURCC!('I', 'E', 'N', 'G');
pub const RIFFINFO_IGNR: DWORD = MAKEFOURCC!('I', 'G', 'N', 'R');
pub const RIFFINFO_IKEY: DWORD = MAKEFOURCC!('I', 'K', 'E', 'Y');
pub const RIFFINFO_ILGT: DWORD = MAKEFOURCC!('I', 'L', 'G', 'T');
pub const RIFFINFO_IMED: DWORD = MAKEFOURCC!('I', 'M', 'E', 'D');
pub const RIFFINFO_INAM: DWORD = MAKEFOURCC!('I', 'N', 'A', 'M');
pub const RIFFINFO_IPLT: DWORD = MAKEFOURCC!('I', 'P', 'L', 'T');
pub const RIFFINFO_IPRD: DWORD = MAKEFOURCC!('I', 'P', 'R', 'D');
pub const RIFFINFO_ISBJ: DWORD = MAKEFOURCC!('I', 'S', 'B', 'J');
pub const RIFFINFO_ISFT: DWORD = MAKEFOURCC!('I', 'S', 'F', 'T');
pub const RIFFINFO_ISHP: DWORD = MAKEFOURCC!('I', 'S', 'H', 'P');
pub const RIFFINFO_ISRC: DWORD = MAKEFOURCC!('I', 'S', 'R', 'C');
pub const RIFFINFO_ISRF: DWORD = MAKEFOURCC!('I', 'S', 'R', 'F');
pub const RIFFINFO_ITCH: DWORD = MAKEFOURCC!('I', 'T', 'C', 'H');
pub const RIFFINFO_ISMP: DWORD = MAKEFOURCC!('I', 'S', 'M', 'P');
pub const RIFFINFO_IDIT: DWORD = MAKEFOURCC!('I', 'D', 'I', 'T');
pub const RIFFINFO_ITRK: DWORD = MAKEFOURCC!('I', 'T', 'R', 'K');
pub const RIFFINFO_ITOC: DWORD = MAKEFOURCC!('I', 'T', 'O', 'C');
pub const WAVE_FORMAT_UNKNOWN: WORD = 0x0000;
pub const WAVE_FORMAT_PCM: WORD = 0x0001;
pub const WAVE_FORMAT_ADPCM: WORD = 0x0002;
pub const WAVE_FORMAT_IEEE_FLOAT: WORD = 0x0003;
pub const WAVE_FORMAT_VSELP: WORD = 0x0004;
pub const WAVE_FORMAT_IBM_CVSD: WORD = 0x0005;
pub const WAVE_FORMAT_ALAW: WORD = 0x0006;
pub const WAVE_FORMAT_MULAW: WORD = 0x0007;
pub const WAVE_FORMAT_DTS: WORD = 0x0008;
pub const WAVE_FORMAT_DRM: WORD = 0x0009;
pub const WAVE_FORMAT_WMAVOICE9: WORD = 0x000A;
pub const WAVE_FORMAT_WMAVOICE10: WORD = 0x000B;
pub const WAVE_FORMAT_OKI_ADPCM: WORD = 0x0010;
pub const WAVE_FORMAT_DVI_ADPCM: WORD = 0x0011;
pub const WAVE_FORMAT_IMA_ADPCM: WORD = WAVE_FORMAT_DVI_ADPCM;
pub const WAVE_FORMAT_MEDIASPACE_ADPCM: WORD = 0x0012;
pub const WAVE_FORMAT_SIERRA_ADPCM: WORD = 0x0013;
pub const WAVE_FORMAT_G723_ADPCM: WORD = 0x0014;
pub const WAVE_FORMAT_DIGISTD: WORD = 0x0015;
pub const WAVE_FORMAT_DIGIFIX: WORD = 0x0016;
pub const WAVE_FORMAT_DIALOGIC_OKI_ADPCM: WORD = 0x0017;
pub const WAVE_FORMAT_MEDIAVISION_ADPCM: WORD = 0x0018;
pub const WAVE_FORMAT_CU_CODEC: WORD = 0x0019;
pub const WAVE_FORMAT_HP_DYN_VOICE: WORD = 0x001A;
pub const WAVE_FORMAT_YAMAHA_ADPCM: WORD = 0x0020;
pub const WAVE_FORMAT_SONARC: WORD = 0x0021;
pub const WAVE_FORMAT_DSPGROUP_TRUESPEECH: WORD = 0x0022;
pub const WAVE_FORMAT_ECHOSC1: WORD = 0x0023;
pub const WAVE_FORMAT_AUDIOFILE_AF36: WORD = 0x0024;
pub const WAVE_FORMAT_APTX: WORD = 0x0025;
pub const WAVE_FORMAT_AUDIOFILE_AF10: WORD = 0x0026;
pub const WAVE_FORMAT_PROSODY_1612: WORD = 0x0027;
pub const WAVE_FORMAT_LRC: WORD = 0x0028;
pub const WAVE_FORMAT_DOLBY_AC2: WORD = 0x0030;
pub const WAVE_FORMAT_GSM610: WORD = 0x0031;
pub const WAVE_FORMAT_MSNAUDIO: WORD = 0x0032;
pub const WAVE_FORMAT_ANTEX_ADPCME: WORD = 0x0033;
pub const WAVE_FORMAT_CONTROL_RES_VQLPC: WORD = 0x0034;
pub const WAVE_FORMAT_DIGIREAL: WORD = 0x0035;
pub const WAVE_FORMAT_DIGIADPCM: WORD = 0x0036;
pub const WAVE_FORMAT_CONTROL_RES_CR10: WORD = 0x0037;
pub const WAVE_FORMAT_NMS_VBXADPCM: WORD = 0x0038;
pub const WAVE_FORMAT_CS_IMAADPCM: WORD = 0x0039;
pub const WAVE_FORMAT_ECHOSC3: WORD = 0x003A;
pub const WAVE_FORMAT_ROCKWELL_ADPCM: WORD = 0x003B;
pub const WAVE_FORMAT_ROCKWELL_DIGITALK: WORD = 0x003C;
pub const WAVE_FORMAT_XEBEC: WORD = 0x003D;
pub const WAVE_FORMAT_G721_ADPCM: WORD = 0x0040;
pub const WAVE_FORMAT_G728_CELP: WORD = 0x0041;
pub const WAVE_FORMAT_MSG723: WORD = 0x0042;
pub const WAVE_FORMAT_INTEL_G723_1: WORD = 0x0043;
pub const WAVE_FORMAT_INTEL_G729: WORD = 0x0044;
pub const WAVE_FORMAT_SHARP_G726: WORD = 0x0045;
pub const WAVE_FORMAT_MPEG: WORD = 0x0050;
pub const WAVE_FORMAT_RT24: WORD = 0x0052;
pub const WAVE_FORMAT_PAC: WORD = 0x0053;
pub const WAVE_FORMAT_MPEGLAYER3: WORD = 0x0055;
pub const WAVE_FORMAT_LUCENT_G723: WORD = 0x0059;
pub const WAVE_FORMAT_CIRRUS: WORD = 0x0060;
pub const WAVE_FORMAT_ESPCM: WORD = 0x0061;
pub const WAVE_FORMAT_VOXWARE: WORD = 0x0062;
pub const WAVE_FORMAT_CANOPUS_ATRAC: WORD = 0x0063;
pub const WAVE_FORMAT_G726_ADPCM: WORD = 0x0064;
pub const WAVE_FORMAT_G722_ADPCM: WORD = 0x0065;
pub const WAVE_FORMAT_DSAT: WORD = 0x0066;
pub const WAVE_FORMAT_DSAT_DISPLAY: WORD = 0x0067;
pub const WAVE_FORMAT_VOXWARE_BYTE_ALIGNED: WORD = 0x0069;
pub const WAVE_FORMAT_VOXWARE_AC8: WORD = 0x0070;
pub const WAVE_FORMAT_VOXWARE_AC10: WORD = 0x0071;
pub const WAVE_FORMAT_VOXWARE_AC16: WORD = 0x0072;
pub const WAVE_FORMAT_VOXWARE_AC20: WORD = 0x0073;
pub const WAVE_FORMAT_VOXWARE_RT24: WORD = 0x0074;
pub const WAVE_FORMAT_VOXWARE_RT29: WORD = 0x0075;
pub const WAVE_FORMAT_VOXWARE_RT29HW: WORD = 0x0076;
pub const WAVE_FORMAT_VOXWARE_VR12: WORD = 0x0077;
pub const WAVE_FORMAT_VOXWARE_VR18: WORD = 0x0078;
pub const WAVE_FORMAT_VOXWARE_TQ40: WORD = 0x0079;
pub const WAVE_FORMAT_VOXWARE_SC3: WORD = 0x007A;
pub const WAVE_FORMAT_VOXWARE_SC3_1: WORD = 0x007B;
pub const WAVE_FORMAT_SOFTSOUND: WORD = 0x0080;
pub const WAVE_FORMAT_VOXWARE_TQ60: WORD = 0x0081;
pub const WAVE_FORMAT_MSRT24: WORD = 0x0082;
pub const WAVE_FORMAT_G729A: WORD = 0x0083;
pub const WAVE_FORMAT_MVI_MVI2: WORD = 0x0084;
pub const WAVE_FORMAT_DF_G726: WORD = 0x0085;
pub const WAVE_FORMAT_DF_GSM610: WORD = 0x0086;
pub const WAVE_FORMAT_ISIAUDIO: WORD = 0x0088;
pub const WAVE_FORMAT_ONLIVE: WORD = 0x0089;
pub const WAVE_FORMAT_MULTITUDE_FT_SX20: WORD = 0x008A;
pub const WAVE_FORMAT_INFOCOM_ITS_G721_ADPCM: WORD = 0x008B;
pub const WAVE_FORMAT_CONVEDIA_G729: WORD = 0x008C;
pub const WAVE_FORMAT_CONGRUENCY: WORD = 0x008D;
pub const WAVE_FORMAT_SBC24: WORD = 0x0091;
pub const WAVE_FORMAT_DOLBY_AC3_SPDIF: WORD = 0x0092;
pub const WAVE_FORMAT_MEDIASONIC_G723: WORD = 0x0093;
pub const WAVE_FORMAT_PROSODY_8KBPS: WORD = 0x0094;
pub const WAVE_FORMAT_ZYXEL_ADPCM: WORD = 0x0097;
pub const WAVE_FORMAT_PHILIPS_LPCBB: WORD = 0x0098;
pub const WAVE_FORMAT_PACKED: WORD = 0x0099;
pub const WAVE_FORMAT_MALDEN_PHONYTALK: WORD = 0x00A0;
pub const WAVE_FORMAT_RACAL_RECORDER_GSM: WORD = 0x00A1;
pub const WAVE_FORMAT_RACAL_RECORDER_G720_A: WORD = 0x00A2;
pub const WAVE_FORMAT_RACAL_RECORDER_G723_1: WORD = 0x00A3;
pub const WAVE_FORMAT_RACAL_RECORDER_TETRA_ACELP: WORD = 0x00A4;
pub const WAVE_FORMAT_NEC_AAC: WORD = 0x00B0;
pub const WAVE_FORMAT_RAW_AAC1: WORD = 0x00FF;
pub const WAVE_FORMAT_RHETOREX_ADPCM: WORD = 0x0100;
pub const WAVE_FORMAT_IRAT: WORD = 0x0101;
pub const WAVE_FORMAT_VIVO_G723: WORD = 0x0111;
pub const WAVE_FORMAT_VIVO_SIREN: WORD = 0x0112;
pub const WAVE_FORMAT_PHILIPS_CELP: WORD = 0x0120;
pub const WAVE_FORMAT_PHILIPS_GRUNDIG: WORD = 0x0121;
pub const WAVE_FORMAT_DIGITAL_G723: WORD = 0x0123;
pub const WAVE_FORMAT_SANYO_LD_ADPCM: WORD = 0x0125;
pub const WAVE_FORMAT_SIPROLAB_ACEPLNET: WORD = 0x0130;
pub const WAVE_FORMAT_SIPROLAB_ACELP4800: WORD = 0x0131;
pub const WAVE_FORMAT_SIPROLAB_ACELP8V3: WORD = 0x0132;
pub const WAVE_FORMAT_SIPROLAB_G729: WORD = 0x0133;
pub const WAVE_FORMAT_SIPROLAB_G729A: WORD = 0x0134;
pub const WAVE_FORMAT_SIPROLAB_KELVIN: WORD = 0x0135;
pub const WAVE_FORMAT_VOICEAGE_AMR: WORD = 0x0136;
pub const WAVE_FORMAT_G726ADPCM: WORD = 0x0140;
pub const WAVE_FORMAT_DICTAPHONE_CELP68: WORD = 0x0141;
pub const WAVE_FORMAT_DICTAPHONE_CELP54: WORD = 0x0142;
pub const WAVE_FORMAT_QUALCOMM_PUREVOICE: WORD = 0x0150;
pub const WAVE_FORMAT_QUALCOMM_HALFRATE: WORD = 0x0151;
pub const WAVE_FORMAT_TUBGSM: WORD = 0x0155;
pub const WAVE_FORMAT_MSAUDIO1: WORD = 0x0160;
pub const WAVE_FORMAT_WMAUDIO2: WORD = 0x0161;
pub const WAVE_FORMAT_WMAUDIO3: WORD = 0x0162;
pub const WAVE_FORMAT_WMAUDIO_LOSSLESS: WORD = 0x0163;
pub const WAVE_FORMAT_WMASPDIF: WORD = 0x0164;
pub const WAVE_FORMAT_UNISYS_NAP_ADPCM: WORD = 0x0170;
pub const WAVE_FORMAT_UNISYS_NAP_ULAW: WORD = 0x0171;
pub const WAVE_FORMAT_UNISYS_NAP_ALAW: WORD = 0x0172;
pub const WAVE_FORMAT_UNISYS_NAP_16K: WORD = 0x0173;
pub const WAVE_FORMAT_SYCOM_ACM_SYC008: WORD = 0x0174;
pub const WAVE_FORMAT_SYCOM_ACM_SYC701_G726L: WORD = 0x0175;
pub const WAVE_FORMAT_SYCOM_ACM_SYC701_CELP54: WORD = 0x0176;
pub const WAVE_FORMAT_SYCOM_ACM_SYC701_CELP68: WORD = 0x0177;
pub const WAVE_FORMAT_KNOWLEDGE_ADVENTURE_ADPCM: WORD = 0x0178;
pub const WAVE_FORMAT_FRAUNHOFER_IIS_MPEG2_AAC: WORD = 0x0180;
pub const WAVE_FORMAT_DTS_DS: WORD = 0x0190;
pub const WAVE_FORMAT_CREATIVE_ADPCM: WORD = 0x0200;
pub const WAVE_FORMAT_CREATIVE_FASTSPEECH8: WORD = 0x0202;
pub const WAVE_FORMAT_CREATIVE_FASTSPEECH10: WORD = 0x0203;
pub const WAVE_FORMAT_UHER_ADPCM: WORD = 0x0210;
pub const WAVE_FORMAT_ULEAD_DV_AUDIO: WORD = 0x0215;
pub const WAVE_FORMAT_ULEAD_DV_AUDIO_1: WORD = 0x0216;
pub const WAVE_FORMAT_QUARTERDECK: WORD = 0x0220;
pub const WAVE_FORMAT_ILINK_VC: WORD = 0x0230;
pub const WAVE_FORMAT_RAW_SPORT: WORD = 0x0240;
pub const WAVE_FORMAT_ESST_AC3: WORD = 0x0241;
pub const WAVE_FORMAT_GENERIC_PASSTHRU: WORD = 0x0249;
pub const WAVE_FORMAT_IPI_HSX: WORD = 0x0250;
pub const WAVE_FORMAT_IPI_RPELP: WORD = 0x0251;
pub const WAVE_FORMAT_CS2: WORD = 0x0260;
pub const WAVE_FORMAT_SONY_SCX: WORD = 0x0270;
pub const WAVE_FORMAT_SONY_SCY: WORD = 0x0271;
pub const WAVE_FORMAT_SONY_ATRAC3: WORD = 0x0272;
pub const WAVE_FORMAT_SONY_SPC: WORD = 0x0273;
pub const WAVE_FORMAT_TELUM_AUDIO: WORD = 0x0280;
pub const WAVE_FORMAT_TELUM_IA_AUDIO: WORD = 0x0281;
pub const WAVE_FORMAT_NORCOM_VOICE_SYSTEMS_ADPCM: WORD = 0x0285;
pub const WAVE_FORMAT_FM_TOWNS_SND: WORD = 0x0300;
pub const WAVE_FORMAT_MICRONAS: WORD = 0x0350;
pub const WAVE_FORMAT_MICRONAS_CELP833: WORD = 0x0351;
pub const WAVE_FORMAT_BTV_DIGITAL: WORD = 0x0400;
pub const WAVE_FORMAT_INTEL_MUSIC_CODER: WORD = 0x0401;
pub const WAVE_FORMAT_INDEO_AUDIO: WORD = 0x0402;
pub const WAVE_FORMAT_QDESIGN_MUSIC: WORD = 0x0450;
pub const WAVE_FORMAT_ON2_VP7_AUDIO: WORD = 0x0500;
pub const WAVE_FORMAT_ON2_VP6_AUDIO: WORD = 0x0501;
pub const WAVE_FORMAT_VME_VMPCM: WORD = 0x0680;
pub const WAVE_FORMAT_TPC: WORD = 0x0681;
pub const WAVE_FORMAT_LIGHTWAVE_LOSSLESS: WORD = 0x08AE;
pub const WAVE_FORMAT_OLIGSM: WORD = 0x1000;
pub const WAVE_FORMAT_OLIADPCM: WORD = 0x1001;
pub const WAVE_FORMAT_OLICELP: WORD = 0x1002;
pub const WAVE_FORMAT_OLISBC: WORD = 0x1003;
pub const WAVE_FORMAT_OLIOPR: WORD = 0x1004;
pub const WAVE_FORMAT_LH_CODEC: WORD = 0x1100;
pub const WAVE_FORMAT_LH_CODEC_CELP: WORD = 0x1101;
pub const WAVE_FORMAT_LH_CODEC_SBC8: WORD = 0x1102;
pub const WAVE_FORMAT_LH_CODEC_SBC12: WORD = 0x1103;
pub const WAVE_FORMAT_LH_CODEC_SBC16: WORD = 0x1104;
pub const WAVE_FORMAT_NORRIS: WORD = 0x1400;
pub const WAVE_FORMAT_ISIAUDIO_2: WORD = 0x1401;
pub const WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS: WORD = 0x1500;
pub const WAVE_FORMAT_MPEG_ADTS_AAC: WORD = 0x1600;
pub const WAVE_FORMAT_MPEG_RAW_AAC: WORD = 0x1601;
pub const WAVE_FORMAT_MPEG_LOAS: WORD = 0x1602;
pub const WAVE_FORMAT_NOKIA_MPEG_ADTS_AAC: WORD = 0x1608;
pub const WAVE_FORMAT_NOKIA_MPEG_RAW_AAC: WORD = 0x1609;
pub const WAVE_FORMAT_VODAFONE_MPEG_ADTS_AAC: WORD = 0x160A;
pub const WAVE_FORMAT_VODAFONE_MPEG_RAW_AAC: WORD = 0x160B;
pub const WAVE_FORMAT_MPEG_HEAAC: WORD = 0x1610;
pub const WAVE_FORMAT_VOXWARE_RT24_SPEECH: WORD = 0x181C;
pub const WAVE_FORMAT_SONICFOUNDRY_LOSSLESS: WORD = 0x1971;
pub const WAVE_FORMAT_INNINGS_TELECOM_ADPCM: WORD = 0x1979;
pub const WAVE_FORMAT_LUCENT_SX8300P: WORD = 0x1C07;
pub const WAVE_FORMAT_LUCENT_SX5363S: WORD = 0x1C0C;
pub const WAVE_FORMAT_CUSEEME: WORD = 0x1F03;
pub const WAVE_FORMAT_NTCSOFT_ALF2CM_ACM: WORD = 0x1FC4;
pub const WAVE_FORMAT_DVM: WORD = 0x2000;
pub const WAVE_FORMAT_DTS2: WORD = 0x2001;
pub const WAVE_FORMAT_MAKEAVIS: WORD = 0x3313;
pub const WAVE_FORMAT_DIVIO_MPEG4_AAC: WORD = 0x4143;
pub const WAVE_FORMAT_NOKIA_ADAPTIVE_MULTIRATE: WORD = 0x4201;
pub const WAVE_FORMAT_DIVIO_G726: WORD = 0x4243;
pub const WAVE_FORMAT_LEAD_SPEECH: WORD = 0x434C;
pub const WAVE_FORMAT_LEAD_VORBIS: WORD = 0x564C;
pub const WAVE_FORMAT_WAVPACK_AUDIO: WORD = 0x5756;
pub const WAVE_FORMAT_OGG_VORBIS_MODE_1: WORD = 0x674F;
pub const WAVE_FORMAT_OGG_VORBIS_MODE_2: WORD = 0x6750;
pub const WAVE_FORMAT_OGG_VORBIS_MODE_3: WORD = 0x6751;
pub const WAVE_FORMAT_OGG_VORBIS_MODE_1_PLUS: WORD = 0x676F;
pub const WAVE_FORMAT_OGG_VORBIS_MODE_2_PLUS: WORD = 0x6770;
pub const WAVE_FORMAT_OGG_VORBIS_MODE_3_PLUS: WORD = 0x6771;
pub const WAVE_FORMAT_3COM_NBX: WORD = 0x7000;
pub const WAVE_FORMAT_FAAD_AAC: WORD = 0x706D;
pub const WAVE_FORMAT_AMR_NB: WORD = 0x7361;
pub const WAVE_FORMAT_AMR_WB: WORD = 0x7362;
pub const WAVE_FORMAT_AMR_WP: WORD = 0x7363;
pub const WAVE_FORMAT_GSM_AMR_CBR: WORD = 0x7A21;
pub const WAVE_FORMAT_GSM_AMR_VBR_SID: WORD = 0x7A22;
pub const WAVE_FORMAT_COMVERSE_INFOSYS_G723_1: WORD = 0xA100;
pub const WAVE_FORMAT_COMVERSE_INFOSYS_AVQSBC: WORD = 0xA101;
pub const WAVE_FORMAT_COMVERSE_INFOSYS_SBC: WORD = 0xA102;
pub const WAVE_FORMAT_SYMBOL_G729_A: WORD = 0xA103;
pub const WAVE_FORMAT_VOICEAGE_AMR_WB: WORD = 0xA104;
pub const WAVE_FORMAT_INGENIENT_G726: WORD = 0xA105;
pub const WAVE_FORMAT_MPEG4_AAC: WORD = 0xA106;
pub const WAVE_FORMAT_ENCORE_G726: WORD = 0xA107;
pub const WAVE_FORMAT_ZOLL_ASAO: WORD = 0xA108;
pub const WAVE_FORMAT_SPEEX_VOICE: WORD = 0xA109;
pub const WAVE_FORMAT_VIANIX_MASC: WORD = 0xA10A;
pub const WAVE_FORMAT_WM9_SPECTRUM_ANALYZER: WORD = 0xA10B;
pub const WAVE_FORMAT_WMF_SPECTRUM_ANAYZER: WORD = 0xA10C;
pub const WAVE_FORMAT_GSM_610: WORD = 0xA10D;
pub const WAVE_FORMAT_GSM_620: WORD = 0xA10E;
pub const WAVE_FORMAT_GSM_660: WORD = 0xA10F;
pub const WAVE_FORMAT_GSM_690: WORD = 0xA110;
pub const WAVE_FORMAT_GSM_ADAPTIVE_MULTIRATE_WB: WORD = 0xA111;
pub const WAVE_FORMAT_POLYCOM_G722: WORD = 0xA112;
pub const WAVE_FORMAT_POLYCOM_G728: WORD = 0xA113;
pub const WAVE_FORMAT_POLYCOM_G729_A: WORD = 0xA114;
pub const WAVE_FORMAT_POLYCOM_SIREN: WORD = 0xA115;
pub const WAVE_FORMAT_GLOBAL_IP_ILBC: WORD = 0xA116;
pub const WAVE_FORMAT_RADIOTIME_TIME_SHIFT_RADIO: WORD = 0xA117;
pub const WAVE_FORMAT_NICE_ACA: WORD = 0xA118;
pub const WAVE_FORMAT_NICE_ADPCM: WORD = 0xA119;
pub const WAVE_FORMAT_VOCORD_G721: WORD = 0xA11A;
pub const WAVE_FORMAT_VOCORD_G726: WORD = 0xA11B;
pub const WAVE_FORMAT_VOCORD_G722_1: WORD = 0xA11C;
pub const WAVE_FORMAT_VOCORD_G728: WORD = 0xA11D;
pub const WAVE_FORMAT_VOCORD_G729: WORD = 0xA11E;
pub const WAVE_FORMAT_VOCORD_G729_A: WORD = 0xA11F;
pub const WAVE_FORMAT_VOCORD_G723_1: WORD = 0xA120;
pub const WAVE_FORMAT_VOCORD_LBC: WORD = 0xA121;
pub const WAVE_FORMAT_NICE_G728: WORD = 0xA122;
pub const WAVE_FORMAT_FRACE_TELECOM_G729: WORD = 0xA123;
pub const WAVE_FORMAT_CODIAN: WORD = 0xA124;
pub const WAVE_FORMAT_FLAC: WORD = 0xF1AC;
pub const WAVE_FORMAT_EXTENSIBLE: WORD = 0xFFFE;
pub const WAVE_FORMAT_DEVELOPMENT: WORD = 0xFFFF;
DEFINE_GUID!{
    KSDATAFORMAT_SUBTYPE_PCM,
    0x00000001, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
DEFINE_GUID!{
    KSDATAFORMAT_SUBTYPE_IEEE_FLOAT,
    0x00000003, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
DEFINE_GUID!{
    KSDATAFORMAT_SUBTYPE_WAVEFORMATEX,
    0x00000000, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
#[inline]
pub fn INIT_WAVEFORMATEX_GUID(guid: &mut GUID, x: USHORT) {
    *guid = KSDATAFORMAT_SUBTYPE_WAVEFORMATEX;
    guid.Data1 = x as c_ulong;
}
#[inline]
pub fn EXTRACT_WAVEFORMATEX_ID(guid: &GUID) -> USHORT {
    guid.Data1 as USHORT
}
#[inline]
pub fn IS_VALID_WAVEFORMATEX_GUID(guid: &GUID) -> bool {
    (guid.Data1 < 0x00000000 + 0xffff) && (guid.Data2 == 0x0000) && (guid.Data3 == 0x0010) &&
    (guid.Data4[0] == 0x80) && (guid.Data4[1] == 0x00) && (guid.Data4[2] == 0x00) &&
    (guid.Data4[3] == 0xaa) && (guid.Data4[4] == 0x00) && (guid.Data4[5] == 0x38) &&
    (guid.Data4[6] == 0x9b) && (guid.Data4[7] == 0x71)
}
UNION!{union WAVEFORMATEXTENSIBLE_Samples {
    [u8; 2],
    wValidBitsPerSample wValidBitsPerSample_mut: WORD,
    wSamplesPerBlock wSamplesPerBlock_mut: WORD,
    wReserved wReserved_mut: WORD,
}}
STRUCT!{#[repr(packed)] struct WAVEFORMATEXTENSIBLE {
    Format: WAVEFORMATEX,
    Samples: WAVEFORMATEXTENSIBLE_Samples,
    dwChannelMask: DWORD,
    SubFormat: GUID,
}}
pub type PWAVEFORMATEXTENSIBLE = *mut WAVEFORMATEXTENSIBLE;
pub type WAVEFORMATPCMEX = WAVEFORMATEXTENSIBLE;
pub type PWAVEFORMATPCMEX = *mut WAVEFORMATPCMEX;
pub type NPWAVEFORMATPCMEX = *mut WAVEFORMATPCMEX;
pub type LPWAVEFORMATPCMEX = *mut WAVEFORMATPCMEX;
pub type WAVEFORMATIEEEFLOATEX = WAVEFORMATEXTENSIBLE;
pub type PWAVEFORMATIEEEFLOATEX = *mut WAVEFORMATIEEEFLOATEX;
pub type NPWAVEFORMATIEEEFLOATEX = *mut WAVEFORMATIEEEFLOATEX;
pub type LPWAVEFORMATIEEEFLOATEX = *mut WAVEFORMATIEEEFLOATEX;
pub const SPEAKER_FRONT_LEFT: DWORD = 0x1;
pub const SPEAKER_FRONT_RIGHT: DWORD = 0x2;
pub const SPEAKER_FRONT_CENTER: DWORD = 0x4;
pub const SPEAKER_LOW_FREQUENCY: DWORD = 0x8;
pub const SPEAKER_BACK_LEFT: DWORD = 0x10;
pub const SPEAKER_BACK_RIGHT: DWORD = 0x20;
pub const SPEAKER_FRONT_LEFT_OF_CENTER: DWORD = 0x40;
pub const SPEAKER_FRONT_RIGHT_OF_CENTER: DWORD = 0x80;
pub const SPEAKER_BACK_CENTER: DWORD = 0x100;
pub const SPEAKER_SIDE_LEFT: DWORD = 0x200;
pub const SPEAKER_SIDE_RIGHT: DWORD = 0x400;
pub const SPEAKER_TOP_CENTER: DWORD = 0x800;
pub const SPEAKER_TOP_FRONT_LEFT: DWORD = 0x1000;
pub const SPEAKER_TOP_FRONT_CENTER: DWORD = 0x2000;
pub const SPEAKER_TOP_FRONT_RIGHT: DWORD = 0x4000;
pub const SPEAKER_TOP_BACK_LEFT: DWORD = 0x8000;
pub const SPEAKER_TOP_BACK_CENTER: DWORD = 0x10000;
pub const SPEAKER_TOP_BACK_RIGHT: DWORD = 0x20000;
pub const SPEAKER_RESERVED: DWORD = 0x7FFC0000;
pub const SPEAKER_ALL: DWORD = 0x80000000;
STRUCT!{#[repr(packed)] struct ADPCMCOEFSET {
    iCoef1: c_short,
    iCoef2: c_short,
}}
pub type PADPCMCOEFSET = *mut ADPCMCOEFSET;
pub type NPADPCMCOEFSET = *mut ADPCMCOEFSET;
pub type LPADPCMCOEFSET = *mut ADPCMCOEFSET;
STRUCT!{#[repr(packed)] struct ADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
    wNumCoef: WORD,
    aCoef: [ADPCMCOEFSET; 0],
}}
pub type PADPCMWAVEFORMAT = *mut ADPCMWAVEFORMAT;
pub type NPADPCMWAVEFORMAT = *mut ADPCMWAVEFORMAT;
pub type LPADPCMWAVEFORMAT = *mut ADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct DRMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wReserved: WORD,
    ulContentId: ULONG,
    wfxSecure: WAVEFORMATEX,
}}
pub type PDRMWAVEFORMAT = *mut DRMWAVEFORMAT;
pub type NPDRMWAVEFORMAT = *mut DRMWAVEFORMAT;
pub type LPDRMWAVEFORMAT = *mut DRMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct DVIADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PDVIADPCMWAVEFORMAT = *mut DVIADPCMWAVEFORMAT;
pub type NPDVIADPCMWAVEFORMAT = *mut DVIADPCMWAVEFORMAT;
pub type LPDVIADPCMWAVEFORMAT = *mut DVIADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct IMAADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PIMAADPCMWAVEFORMAT = *mut IMAADPCMWAVEFORMAT;
pub type NPIMAADPCMWAVEFORMAT = *mut IMAADPCMWAVEFORMAT;
pub type LPIMAADPCMWAVEFORMAT = *mut IMAADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct MEDIASPACEADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wRevision: WORD,
}}
pub type PMEDIASPACEADPCMWAVEFORMAT = *mut MEDIASPACEADPCMWAVEFORMAT;
pub type NPMEDIASPACEADPCMWAVEFORMAT = *mut MEDIASPACEADPCMWAVEFORMAT;
pub type LPMEDIASPACEADPCMWAVEFORMAT = *mut MEDIASPACEADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct SIERRAADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wRevision: WORD,
}}
pub type PSIERRAADPCMWAVEFORMAT = *mut SIERRAADPCMWAVEFORMAT;
pub type NPSIERRAADPCMWAVEFORMAT = *mut SIERRAADPCMWAVEFORMAT;
pub type LPSIERRAADPCMWAVEFORMAT = *mut SIERRAADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct G723_ADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    cbExtraSize: WORD,
    nAuxBlockSize: WORD,
}}
pub type PG723_ADPCMWAVEFORMAT = *mut G723_ADPCMWAVEFORMAT;
pub type NPG723_ADPCMWAVEFORMAT = *mut G723_ADPCMWAVEFORMAT;
pub type LPG723_ADPCMWAVEFORMAT = *mut G723_ADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct DIGISTDWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PDIGISTDWAVEFORMAT = *mut DIGISTDWAVEFORMAT;
pub type NPDIGISTDWAVEFORMAT = *mut DIGISTDWAVEFORMAT;
pub type LPDIGISTDWAVEFORMAT = *mut DIGISTDWAVEFORMAT;
STRUCT!{#[repr(packed)] struct DIGIFIXWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PDIGIFIXWAVEFORMAT = *mut DIGIFIXWAVEFORMAT;
pub type NPDIGIFIXWAVEFORMAT = *mut DIGIFIXWAVEFORMAT;
pub type LPDIGIFIXWAVEFORMAT = *mut DIGIFIXWAVEFORMAT;
STRUCT!{#[repr(packed)] struct DIALOGICOKIADPCMWAVEFORMAT {
    ewf: WAVEFORMATEX,
}}
pub type PDIALOGICOKIADPCMWAVEFORMAT = *mut DIALOGICOKIADPCMWAVEFORMAT;
pub type NPDIALOGICOKIADPCMWAVEFORMAT = *mut DIALOGICOKIADPCMWAVEFORMAT;
pub type LPDIALOGICOKIADPCMWAVEFORMAT = *mut DIALOGICOKIADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct YAMAHA_ADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PYAMAHA_ADPCMWAVEFORMAT = *mut YAMAHA_ADPCMWAVEFORMAT;
pub type NPYAMAHA_ADPCMWAVEFORMAT = *mut YAMAHA_ADPCMWAVEFORMAT;
pub type LPYAMAHA_ADPCMWAVEFORMAT = *mut YAMAHA_ADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct SONARCWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wCompType: WORD,
}}
pub type PSONARCWAVEFORMAT = *mut SONARCWAVEFORMAT;
pub type NPSONARCWAVEFORMAT = *mut SONARCWAVEFORMAT;
pub type LPSONARCWAVEFORMAT = *mut SONARCWAVEFORMAT;
STRUCT!{#[repr(packed)] struct TRUESPEECHWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wRevision: WORD,
    nSamplesPerBlock: WORD,
    abReserved: [BYTE; 28],
}}
pub type PTRUESPEECHWAVEFORMAT = *mut TRUESPEECHWAVEFORMAT;
pub type NPTRUESPEECHWAVEFORMAT = *mut TRUESPEECHWAVEFORMAT;
pub type LPTRUESPEECHWAVEFORMAT = *mut TRUESPEECHWAVEFORMAT;
STRUCT!{#[repr(packed)] struct ECHOSC1WAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PECHOSC1WAVEFORMAT = *mut ECHOSC1WAVEFORMAT;
pub type NPECHOSC1WAVEFORMAT = *mut ECHOSC1WAVEFORMAT;
pub type LPECHOSC1WAVEFORMAT = *mut ECHOSC1WAVEFORMAT;
STRUCT!{#[repr(packed)] struct AUDIOFILE_AF36WAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PAUDIOFILE_AF36WAVEFORMAT = *mut AUDIOFILE_AF36WAVEFORMAT;
pub type NPAUDIOFILE_AF36WAVEFORMAT = *mut AUDIOFILE_AF36WAVEFORMAT;
pub type LPAUDIOFILE_AF36WAVEFORMAT = *mut AUDIOFILE_AF36WAVEFORMAT;
STRUCT!{#[repr(packed)] struct APTXWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PAPTXWAVEFORMAT = *mut APTXWAVEFORMAT;
pub type NPAPTXWAVEFORMAT = *mut APTXWAVEFORMAT;
pub type LPAPTXWAVEFORMAT = *mut APTXWAVEFORMAT;
STRUCT!{#[repr(packed)] struct AUDIOFILE_AF10WAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PAUDIOFILE_AF10WAVEFORMAT = *mut AUDIOFILE_AF10WAVEFORMAT;
pub type NPAUDIOFILE_AF10WAVEFORMAT = *mut AUDIOFILE_AF10WAVEFORMAT;
pub type LPAUDIOFILE_AF10WAVEFORMAT = *mut AUDIOFILE_AF10WAVEFORMAT;
STRUCT!{#[repr(packed)] struct DOLBYAC2WAVEFORMAT {
    wfx: WAVEFORMATEX,
    nAuxBitsCode: WORD,
}}
pub type PDOLBYAC2WAVEFORMAT = *mut DOLBYAC2WAVEFORMAT;
pub type NPDOLBYAC2WAVEFORMAT = *mut DOLBYAC2WAVEFORMAT;
pub type LPDOLBYAC2WAVEFORMAT = *mut DOLBYAC2WAVEFORMAT;
STRUCT!{#[repr(packed)] struct GSM610WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PGSM610WAVEFORMAT = *mut GSM610WAVEFORMAT;
pub type NPGSM610WAVEFORMAT = *mut GSM610WAVEFORMAT;
pub type LPGSM610WAVEFORMAT = *mut GSM610WAVEFORMAT;
STRUCT!{#[repr(packed)] struct ADPCMEWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PADPCMEWAVEFORMAT = *mut ADPCMEWAVEFORMAT;
pub type NPADPCMEWAVEFORMAT = *mut ADPCMEWAVEFORMAT;
pub type LPADPCMEWAVEFORMAT = *mut ADPCMEWAVEFORMAT;
STRUCT!{#[repr(packed)] struct CONTRESVQLPCWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PCONTRESVQLPCWAVEFORMAT = *mut CONTRESVQLPCWAVEFORMAT;
pub type NPCONTRESVQLPCWAVEFORMAT = *mut CONTRESVQLPCWAVEFORMAT;
pub type LPCONTRESVQLPCWAVEFORMAT = *mut CONTRESVQLPCWAVEFORMAT;
STRUCT!{#[repr(packed)] struct DIGIREALWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PDIGIREALWAVEFORMAT = *mut DIGIREALWAVEFORMAT;
pub type NPDIGIREALWAVEFORMAT = *mut DIGIREALWAVEFORMAT;
pub type LPDIGIREALWAVEFORMAT = *mut DIGIREALWAVEFORMAT;
STRUCT!{#[repr(packed)] struct DIGIADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PDIGIADPCMWAVEFORMAT = *mut DIGIADPCMWAVEFORMAT;
pub type NPDIGIADPCMWAVEFORMAT = *mut DIGIADPCMWAVEFORMAT;
pub type LPDIGIADPCMWAVEFORMAT = *mut DIGIADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct CONTRESCR10WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PCONTRESCR10WAVEFORMAT = *mut CONTRESCR10WAVEFORMAT;
pub type NPCONTRESCR10WAVEFORMAT = *mut CONTRESCR10WAVEFORMAT;
pub type LPCONTRESCR10WAVEFORMAT = *mut CONTRESCR10WAVEFORMAT;
STRUCT!{#[repr(packed)] struct NMS_VBXADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
}}
pub type PNMS_VBXADPCMWAVEFORMAT = *mut NMS_VBXADPCMWAVEFORMAT;
pub type NPNMS_VBXADPCMWAVEFORMAT = *mut NMS_VBXADPCMWAVEFORMAT;
pub type LPNMS_VBXADPCMWAVEFORMAT = *mut NMS_VBXADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct G721_ADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    nAuxBlockSize: WORD,
}}
pub type PG721_ADPCMWAVEFORMAT = *mut G721_ADPCMWAVEFORMAT;
pub type NPG721_ADPCMWAVEFORMAT = *mut G721_ADPCMWAVEFORMAT;
pub type LPG721_ADPCMWAVEFORMAT = *mut G721_ADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct MPEG1WAVEFORMAT {
    wfx: WAVEFORMATEX,
    fwHeadLayer: WORD,
    dwHeadBitrate: DWORD,
    fwHeadMode: WORD,
    fwHeadModeExt: WORD,
    wHeadEmphasis: WORD,
    fwHeadFlags: WORD,
    dwPTSLow: DWORD,
    dwPTSHigh: DWORD,
}}
pub type PMPEG1WAVEFORMAT = *mut MPEG1WAVEFORMAT;
pub type NPMPEG1WAVEFORMAT = *mut MPEG1WAVEFORMAT;
pub type LPMPEG1WAVEFORMAT = *mut MPEG1WAVEFORMAT;
pub const ACM_MPEG_LAYER1: WORD = 0x0001;
pub const ACM_MPEG_LAYER2: WORD = 0x0002;
pub const ACM_MPEG_LAYER3: WORD = 0x0004;
pub const ACM_MPEG_STEREO: WORD = 0x0001;
pub const ACM_MPEG_JOINTSTEREO: WORD = 0x0002;
pub const ACM_MPEG_DUALCHANNEL: WORD = 0x0004;
pub const ACM_MPEG_SINGLECHANNEL: WORD = 0x0008;
pub const ACM_MPEG_PRIVATEBIT: WORD = 0x0001;
pub const ACM_MPEG_COPYRIGHT: WORD = 0x0002;
pub const ACM_MPEG_ORIGINALHOME: WORD = 0x0004;
pub const ACM_MPEG_PROTECTIONBIT: WORD = 0x0008;
pub const ACM_MPEG_ID_MPEG1: WORD = 0x0010;
pub const MPEGLAYER3_WFX_EXTRA_BYTES: WORD = 12;
STRUCT!{#[repr(packed)] struct MPEGLAYER3WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wID: WORD,
    fdwFlags: DWORD,
    nBlockSize: WORD,
    nFramesPerBlock: WORD,
    nCodecDelay: WORD,
}}
pub type PMPEGLAYER3WAVEFORMAT = *mut MPEGLAYER3WAVEFORMAT;
pub type NPMPEGLAYER3WAVEFORMAT = *mut MPEGLAYER3WAVEFORMAT;
pub type LPMPEGLAYER3WAVEFORMAT = *mut MPEGLAYER3WAVEFORMAT;
pub const MPEGLAYER3_ID_UNKNOWN: WORD = 0;
pub const MPEGLAYER3_ID_MPEG: WORD = 1;
pub const MPEGLAYER3_ID_CONSTANTFRAMESIZE: WORD = 2;
pub const MPEGLAYER3_FLAG_PADDING_ISO: DWORD = 0x00000000;
pub const MPEGLAYER3_FLAG_PADDING_ON: DWORD = 0x00000001;
pub const MPEGLAYER3_FLAG_PADDING_OFF: DWORD = 0x00000002;
STRUCT!{#[repr(packed)] struct HEAACWAVEINFO {
    wfx: WAVEFORMATEX,
    wPayloadType: WORD,
    wAudioProfileLevelIndication: WORD,
    wStructType: WORD,
    wReserved1: WORD,
    dwReserved2: DWORD,
}}
pub type PHEAACWAVEINFO = *mut HEAACWAVEINFO;
pub type NPHEAACWAVEINFO = *mut HEAACWAVEINFO;
pub type LPHEAACWAVEINFO = *mut HEAACWAVEINFO;
STRUCT!{#[repr(packed)] struct HEAACWAVEFORMAT {
    wfx: WAVEFORMATEX,
    pbAudioSpecificConfig: [BYTE; 1],
}}
pub type PHEAACWAVEFORMAT = *mut HEAACWAVEFORMAT;
pub type NPHEAACWAVEFORMAT = *mut HEAACWAVEFORMAT;
pub type LPHEAACWAVEFORMAT = *mut HEAACWAVEFORMAT;
pub const MM_MSFT_ACM_WMAUDIO: WORD = 39;
pub const WMAUDIO_BITS_PER_SAMPLE: WORD = 16;
pub const WMAUDIO_MAX_CHANNELS: WORD = 2;
pub const MM_MSFT_ACM_MSAUDIO1: WORD = 39;
STRUCT!{#[repr(packed)] struct MSAUDIO1WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wSamplesPerBlock: WORD,
    wEncodeOptions: WORD,
}}
pub type PMSAUDIO1WAVEFORMAT = *mut MSAUDIO1WAVEFORMAT;
pub type LPMSAUDIO1WAVEFORMAT = *mut MSAUDIO1WAVEFORMAT;
pub const MSAUDIO1_BITS_PER_SAMPLE: WORD = WMAUDIO_BITS_PER_SAMPLE;
pub const MSAUDIO1_MAX_CHANNELS: WORD = WMAUDIO_MAX_CHANNELS;
pub const MSAUDIO1_WFX_EXTRA_BYTES: WORD = 4;
pub const MM_MSFT_ACM_WMAUDIO2: WORD = 101;
STRUCT!{#[repr(packed)] struct WMAUDIO2WAVEFORMAT {
    wfx: WAVEFORMATEX,
    dwSamplesPerBlock: DWORD,
    wEncodeOptions: WORD,
    dwSuperBlockAlign: DWORD,
}}
pub type PWMAUDIO2WAVEFORMAT = *mut WMAUDIO2WAVEFORMAT;
pub type LPWMAUDIO2WAVEFORMAT = *mut WMAUDIO2WAVEFORMAT;
pub const WMAUDIO2_BITS_PER_SAMPLE: WORD = WMAUDIO_BITS_PER_SAMPLE;
pub const WMAUDIO2_MAX_CHANNELS: WORD = WMAUDIO_MAX_CHANNELS;
pub const WMAUDIO2_WFX_EXTRA_BYTES: WORD = 10;
STRUCT!{#[repr(packed)] struct WMAUDIO3WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wValidBitsPerSample: WORD,
    dwChannelMask: DWORD,
    dwReserved1: DWORD,
    dwReserved2: DWORD,
    wEncodeOptions: WORD,
    wReserved3: WORD,
}}
pub type PWMAUDIO3WAVEFORMAT = *mut WMAUDIO3WAVEFORMAT;
pub type LPWMAUDIO3WAVEFORMAT = *mut WMAUDIO3WAVEFORMAT;
pub const WMAUDIO3_WFX_EXTRA_BYTES: WORD = 18;
STRUCT!{#[repr(packed)] struct CREATIVEADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
    wRevision: WORD,
}}
pub type PCREATIVEADPCMWAVEFORMAT = *mut CREATIVEADPCMWAVEFORMAT;
pub type NPCREATIVEADPCMWAVEFORMAT = *mut CREATIVEADPCMWAVEFORMAT;
pub type LPCREATIVEADPCMWAVEFORMAT = *mut CREATIVEADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct CREATIVEFASTSPEECH8WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wRevision: WORD,
}}
pub type PCREATIVEFASTSPEECH8WAVEFORMAT = *mut CREATIVEFASTSPEECH8WAVEFORMAT;
pub type NPCREATIVEFASTSPEECH8WAVEFORMAT = *mut CREATIVEFASTSPEECH8WAVEFORMAT;
pub type LPCREATIVEFASTSPEECH8WAVEFORMAT = *mut CREATIVEFASTSPEECH8WAVEFORMAT;
STRUCT!{#[repr(packed)] struct CREATIVEFASTSPEECH10WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wRevision: WORD,
}}
pub type PCREATIVEFASTSPEECH10WAVEFORMAT = *mut CREATIVEFASTSPEECH10WAVEFORMAT;
pub type NPCREATIVEFASTSPEECH10WAVEFORMAT = *mut CREATIVEFASTSPEECH10WAVEFORMAT;
pub type LPCREATIVEFASTSPEECH10WAVEFORMAT = *mut CREATIVEFASTSPEECH10WAVEFORMAT;
STRUCT!{#[repr(packed)] struct FMTOWNS_SND_WAVEFORMAT {
    wfx: WAVEFORMATEX,
    wRevision: WORD,
}}
pub type PFMTOWNS_SND_WAVEFORMAT = *mut FMTOWNS_SND_WAVEFORMAT;
pub type NPFMTOWNS_SND_WAVEFORMAT = *mut FMTOWNS_SND_WAVEFORMAT;
pub type LPFMTOWNS_SND_WAVEFORMAT = *mut FMTOWNS_SND_WAVEFORMAT;
STRUCT!{#[repr(packed)] struct OLIGSMWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type POLIGSMWAVEFORMAT = *mut OLIGSMWAVEFORMAT;
pub type NPOLIGSMWAVEFORMAT = *mut OLIGSMWAVEFORMAT;
pub type LPOLIGSMWAVEFORMAT = *mut OLIGSMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct OLIADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type POLIADPCMWAVEFORMAT = *mut OLIADPCMWAVEFORMAT;
pub type NPOLIADPCMWAVEFORMAT = *mut OLIADPCMWAVEFORMAT;
pub type LPOLIADPCMWAVEFORMAT = *mut OLIADPCMWAVEFORMAT;
STRUCT!{#[repr(packed)] struct OLICELPWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type POLICELPWAVEFORMAT = *mut OLICELPWAVEFORMAT;
pub type NPOLICELPWAVEFORMAT = *mut OLICELPWAVEFORMAT;
pub type LPOLICELPWAVEFORMAT = *mut OLICELPWAVEFORMAT;
STRUCT!{#[repr(packed)] struct OLISBCWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type POLISBCWAVEFORMAT = *mut OLISBCWAVEFORMAT;
pub type NPOLISBCWAVEFORMAT = *mut OLISBCWAVEFORMAT;
pub type LPOLISBCWAVEFORMAT = *mut OLISBCWAVEFORMAT;
STRUCT!{#[repr(packed)] struct OLIOPRWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type POLIOPRWAVEFORMAT = *mut OLIOPRWAVEFORMAT;
pub type NPOLIOPRWAVEFORMAT = *mut OLIOPRWAVEFORMAT;
pub type LPOLIOPRWAVEFORMAT = *mut OLIOPRWAVEFORMAT;
STRUCT!{#[repr(packed)] struct CSIMAADPCMWAVEFORMAT {
    wfx: WAVEFORMATEX,
}}
pub type PCSIMAADPCMWAVEFORMAT = *mut CSIMAADPCMWAVEFORMAT;
pub type NPCSIMAADPCMWAVEFORMAT = *mut CSIMAADPCMWAVEFORMAT;
pub type LPCSIMAADPCMWAVEFORMAT = *mut CSIMAADPCMWAVEFORMAT;
pub const WAVE_FILTER_UNKNOWN: WORD = 0x0000;
pub const WAVE_FILTER_DEVELOPMENT: WORD = 0xFFFF;
STRUCT!{#[repr(packed)] struct WAVEFILTER {
    cbStruct: DWORD,
    dwFilterTag: DWORD,
    fdwFilter: DWORD,
    dwReserved: [DWORD; 5],
}}
pub type PWAVEFILTER = *mut WAVEFILTER;
pub type NPWAVEFILTER = *mut WAVEFILTER;
pub type LPWAVEFILTER = *mut WAVEFILTER;
pub const WAVE_FILTER_VOLUME: DWORD = 0x0001;
STRUCT!{#[repr(packed)] struct VOLUMEWAVEFILTER {
    wfltr: WAVEFILTER,
    dwVolume: DWORD,
}}
pub type PVOLUMEWAVEFILTER = *mut VOLUMEWAVEFILTER;
pub type NPVOLUMEWAVEFILTER = *mut VOLUMEWAVEFILTER;
pub type LPVOLUMEWAVEFILTER = *mut VOLUMEWAVEFILTER;
pub const WAVE_FILTER_ECHO: DWORD = 0x0002;
STRUCT!{#[repr(packed)] struct ECHOWAVEFILTER {
    wfltr: WAVEFILTER,
    dwVolume: DWORD,
    dwDelay: DWORD,
}}
pub type PECHOWAVEFILTER = *mut ECHOWAVEFILTER;
pub type NPECHOWAVEFILTER = *mut ECHOWAVEFILTER;
pub type LPECHOWAVEFILTER = *mut ECHOWAVEFILTER;
pub const RIFFWAVE_inst: DWORD = MAKEFOURCC!('i', 'n', 's', 't');
STRUCT!{#[repr(packed)] struct s_RIFFWAVE_inst {
    bUnshiftedNote: BYTE,
    chFineTune: c_char,
    chGain: c_char,
    bLowNote: BYTE,
    bHighNote: BYTE,
    bLowVelocity: BYTE,
    bHighVelocity: BYTE,
}}
pub const RIFFCPPO: DWORD = MAKEFOURCC!('C','P','P','O');
pub const RIFFCPPO_objr: DWORD = MAKEFOURCC!('o','b','j','r');
pub const RIFFCPPO_obji: DWORD = MAKEFOURCC!('o','b','j','i');
pub const RIFFCPPO_clsr: DWORD = MAKEFOURCC!('c','l','s','r');
pub const RIFFCPPO_clsi: DWORD = MAKEFOURCC!('c','l','s','i');
pub const RIFFCPPO_mbr: DWORD = MAKEFOURCC!('m','b','r',' ');
pub const RIFFCPPO_char: DWORD = MAKEFOURCC!('c','h','a','r');
pub const RIFFCPPO_byte: DWORD = MAKEFOURCC!('b','y','t','e');
pub const RIFFCPPO_int: DWORD = MAKEFOURCC!('i','n','t',' ');
pub const RIFFCPPO_word: DWORD = MAKEFOURCC!('w','o','r','d');
pub const RIFFCPPO_long: DWORD = MAKEFOURCC!('l','o','n','g');
pub const RIFFCPPO_dwrd: DWORD = MAKEFOURCC!('d','w','r','d');
pub const RIFFCPPO_flt: DWORD = MAKEFOURCC!('f','l','t',' ');
pub const RIFFCPPO_dbl: DWORD = MAKEFOURCC!('d','b','l',' ');
pub const RIFFCPPO_str: DWORD = MAKEFOURCC!('s','t','r',' ');
STRUCT!{#[repr(packed)] struct EXBMINFOHEADER {
    bmi: BITMAPINFOHEADER,
    biExtDataOffset: DWORD,
}}
pub const BICOMP_IBMULTIMOTION: DWORD = MAKEFOURCC!('U', 'L', 'T', 'I');
pub const BICOMP_IBMPHOTOMOTION: DWORD = MAKEFOURCC!('P', 'H', 'M', 'O');
pub const BICOMP_CREATIVEYUV: DWORD = MAKEFOURCC!('c', 'y', 'u', 'v');
pub const JPEG_DIB: DWORD = MAKEFOURCC!('J','P','E','G');
pub const MJPG_DIB: DWORD = MAKEFOURCC!('M','J','P','G');
pub const JPEG_PROCESS_BASELINE: DWORD = 0;
pub const AVIIF_CONTROLFRAME: DWORD = 0x00000200;
pub const JIFMK_SOF0: DWORD = 0xFFC0;
pub const JIFMK_SOF1: DWORD = 0xFFC1;
pub const JIFMK_SOF2: DWORD = 0xFFC2;
pub const JIFMK_SOF3: DWORD = 0xFFC3;
pub const JIFMK_SOF5: DWORD = 0xFFC5;
pub const JIFMK_SOF6: DWORD = 0xFFC6;
pub const JIFMK_SOF7: DWORD = 0xFFC7;
pub const JIFMK_JPG: DWORD = 0xFFC8;
pub const JIFMK_SOF9: DWORD = 0xFFC9;
pub const JIFMK_SOF10: DWORD = 0xFFCA;
pub const JIFMK_SOF11: DWORD = 0xFFCB;
pub const JIFMK_SOF13: DWORD = 0xFFCD;
pub const JIFMK_SOF14: DWORD = 0xFFCE;
pub const JIFMK_SOF15: DWORD = 0xFFCF;
pub const JIFMK_DHT: DWORD = 0xFFC4;
pub const JIFMK_DAC: DWORD = 0xFFCC;
pub const JIFMK_RST0: DWORD = 0xFFD0;
pub const JIFMK_RST1: DWORD = 0xFFD1;
pub const JIFMK_RST2: DWORD = 0xFFD2;
pub const JIFMK_RST3: DWORD = 0xFFD3;
pub const JIFMK_RST4: DWORD = 0xFFD4;
pub const JIFMK_RST5: DWORD = 0xFFD5;
pub const JIFMK_RST6: DWORD = 0xFFD6;
pub const JIFMK_RST7: DWORD = 0xFFD7;
pub const JIFMK_SOI: DWORD = 0xFFD8;
pub const JIFMK_EOI: DWORD = 0xFFD9;
pub const JIFMK_SOS: DWORD = 0xFFDA;
pub const JIFMK_DQT: DWORD = 0xFFDB;
pub const JIFMK_DNL: DWORD = 0xFFDC;
pub const JIFMK_DRI: DWORD = 0xFFDD;
pub const JIFMK_DHP: DWORD = 0xFFDE;
pub const JIFMK_EXP: DWORD = 0xFFDF;
pub const JIFMK_APP0: DWORD = 0xFFE0;
pub const JIFMK_APP1: DWORD = 0xFFE1;
pub const JIFMK_APP2: DWORD = 0xFFE2;
pub const JIFMK_APP3: DWORD = 0xFFE3;
pub const JIFMK_APP4: DWORD = 0xFFE4;
pub const JIFMK_APP5: DWORD = 0xFFE5;
pub const JIFMK_APP6: DWORD = 0xFFE6;
pub const JIFMK_APP7: DWORD = 0xFFE7;
pub const JIFMK_JPG0: DWORD = 0xFFF0;
pub const JIFMK_JPG1: DWORD = 0xFFF1;
pub const JIFMK_JPG2: DWORD = 0xFFF2;
pub const JIFMK_JPG3: DWORD = 0xFFF3;
pub const JIFMK_JPG4: DWORD = 0xFFF4;
pub const JIFMK_JPG5: DWORD = 0xFFF5;
pub const JIFMK_JPG6: DWORD = 0xFFF6;
pub const JIFMK_JPG7: DWORD = 0xFFF7;
pub const JIFMK_JPG8: DWORD = 0xFFF8;
pub const JIFMK_JPG9: DWORD = 0xFFF9;
pub const JIFMK_JPG10: DWORD = 0xFFFA;
pub const JIFMK_JPG11: DWORD = 0xFFFB;
pub const JIFMK_JPG12: DWORD = 0xFFFC;
pub const JIFMK_JPG13: DWORD = 0xFFFD;
pub const JIFMK_COM: DWORD = 0xFFFE;
pub const JIFMK_TEM: DWORD = 0xFF01;
pub const JIFMK_RES: DWORD = 0xFF02;
pub const JIFMK_00: DWORD = 0xFF00;
pub const JIFMK_FF: DWORD = 0xFFFF;
pub const JPEG_Y: DWORD = 1;
pub const JPEG_YCbCr: DWORD = 2;
pub const JPEG_RGB: DWORD = 3;
STRUCT!{#[repr(packed)] struct JPEGINFOHEADER {
    JPEGSize: DWORD,
    JPEGProcess: DWORD,
    JPEGColorSpaceID: DWORD,
    JPEGBitsPerSample: DWORD,
    JPEGHSubSampling: DWORD,
    JPEGVSubSampling: DWORD,
}}
pub const ICTYPE_VIDEO: DWORD = MAKEFOURCC!('v', 'i', 'd', 'c');
pub const ICTYPE_AUDIO: DWORD = MAKEFOURCC!('a', 'u', 'd', 'c');
pub const FOURCC_RDSP: DWORD = MAKEFOURCC!('R', 'D', 'S', 'P');
pub const MIXERCONTROL_CONTROLTYPE_SRS_MTS: DWORD = MIXERCONTROL_CONTROLTYPE_BOOLEAN + 6;
pub const MIXERCONTROL_CONTROLTYPE_SRS_ONOFF: DWORD = MIXERCONTROL_CONTROLTYPE_BOOLEAN + 7;
pub const MIXERCONTROL_CONTROLTYPE_SRS_SYNTHSELECT: DWORD = MIXERCONTROL_CONTROLTYPE_BOOLEAN + 8;
